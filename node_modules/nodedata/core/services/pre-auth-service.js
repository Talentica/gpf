"use strict";
const utils_1 = require("../metadata/utils");
const Utils = require("../utils");
const decorators_1 = require('../constants/decorators');
const winstonLog_1 = require('../../logging/winstonLog');
const Enumerable = require('linq');
var Q = require('q');
class PreAuthService {
    static isPreAuthenticated(params, preAuthParam, key) {
        var services = utils_1.MetaUtils.getMetaDataForDecorators([decorators_1.Decorators.SERVICE]);
        var service = Enumerable.from(services).where(x => x.metadata[0].params.serviceName == preAuthParam.serviceName).select(x => x.metadata[0]).firstOrDefault();
        if (service) {
            //var param = [];
            //param.push(content);
            //if (preAuthParam.params.entity == '#entity') {
            //    param.push(content);
            //}
            //if (preAuthParam.params.other) {
            //    for (var i in preAuthParam.params.other) {
            //        param.push(preAuthParam.params.other[i]);
            //    }
            //}
            var ret = service.target[preAuthParam.methodName].apply(service.target, params);
            if (Utils.isPromise(ret)) {
                return ret.then(isAllowed => {
                    return isAllowed;
                }).catch((err) => {
                    winstonLog_1.winstonLog.logError('[PreAuthService: isPreAuthenticated]: error ' + err);
                    throw err;
                });
            }
            else {
                return Q.when(ret);
            }
        }
        return Q.when(true);
    }
}
exports.PreAuthService = PreAuthService;

//# sourceMappingURL=pre-auth-service.js.map
