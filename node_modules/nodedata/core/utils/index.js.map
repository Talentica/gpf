{"version":3,"sources":["core/utils/index.ts"],"names":[],"mappings":"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","file":"core/utils/index.js","sourcesContent":["var Enumerable: any = require('linq');\nimport Mongoose = require(\"mongoose\");\nimport {ClassType} from './classtype';\nimport {IEntityService} from '../interfaces/entity-service';\nimport {MetaData} from '../metadata/metadata';\nimport {MetaUtils} from '../metadata/utils';\nimport {Decorators, RelationDecorators} from '../constants';\nimport {DecoratorType} from '../enums/decorator-type';\nimport {IAssociationParams} from '../decorators/interfaces/association-params';\nimport {IDecoratorParams} from '../decorators/interfaces/decorator-params';\nimport {pathRepoMap} from '../dynamic/model-entity';\n\nlet _config: any = {};\nlet _securityConfig: any = {};\nlet _entityService: Map<String, IEntityService> = new Map<String, IEntityService>();\n\nexport class resources {\n    static userDatabase: string = '_database';\n}\n\nexport function config(config?: any) {\n    if (!(config === undefined)) {\n        _config = config;\n    }\n    return _config;\n}\n\nexport function securityConfig(securityConf?: any) {\n    if (!(securityConf === undefined)) {\n        _securityConfig = securityConf;\n    }\n    return _securityConfig;\n}\n\nexport function entityService(entityType:string, entityService?: IEntityService): IEntityService {\n    if (!_entityService[entityType] && entityService) {\n        _entityService[entityType] = entityService;\n    }\n    return _entityService[entityType];\n}\n\n//export function sqlEntityService(sqlEntityService?: IEntityService): IEntityService {\n//    if (!(sqlEntityService === undefined)) {\n//        _sqlEntityService = sqlEntityService;\n//    }\n//    return _sqlEntityService;\n//}\n\nexport function getDesignType(target: Object|Function, prop: string) {\n    return (<any>Reflect).getMetadata(\"design:type\", target, prop);\n}\n\nexport function getDesignParamType(target: Object | Function, prop: string, parameterIndex: number) {\n    return (<any>Reflect).getMetadata(\"design:paramtypes\", target, prop);\n}\n\n\nexport function activator<T>(cls: ClassType<T>, args?: Array<any>): T {\n    return new (Function.prototype.bind.apply(cls, [null].concat(args)));\n    //function F(): void {\n    //    return <any>cls.constructor.apply(this, args);\n    //}\n    //F.prototype = <any>cls.constructor.prototype;\n    //return new F();\n}\n\nexport function isRelationDecorator(decorator: string) {\n    return decorator === Decorators.ONETOMANY || decorator === Decorators.MANYTOONE || decorator === Decorators.MANYTOMANY || decorator === Decorators.ONETOONE;\n}\n\n\n/**\n * Get all the metadata of all the decorators of all the models referencing current target, i.e. (rel = target relation name)\n * @param target like UserModel (function of prototype)\n * \n */\nexport function getAllRelationsForTarget(target: Object): Array<MetaData> {\n    if (!target) {\n        throw TypeError;\n    }\n    //global.models.CourseModel.decorator.manytomany.students\n    var name = getResourceNameFromModel(target);\n    if (!name) {\n        return null;\n    }\n\n    var metaForRelations = MetaUtils.getMetaDataForDecorators(RelationDecorators);\n\n    return Enumerable.from(metaForRelations)\n        .selectMany(keyVal => keyVal.metadata)\n        .where(x => (<IAssociationParams>(<MetaData>x).params).rel === name)\n        .toArray();\n}\n\n/**\n * Get all the metadata of all the decorators of all the models referencing current target, i.e. (rel = target relation name)\n * @param target like UserModel (function of prototype)\n *\n */\nexport function getAllRelationsForTargetInternal(target: Object): Array<MetaData> {\n    if (!target) {\n        throw TypeError;\n    }\n    //global.models.CourseModel.decorator.manytomany.students\n    var meta = MetaUtils.getMetaData(target);\n\n    if (!meta) {\n        return null;\n    }\n\n    return Enumerable.from(meta)\n        .where((x: any) => {\n            return RelationDecorators.indexOf((<MetaData>x).decorator) !== -1;\n        })\n        .toArray();\n}\n\nexport function getRepoPathForChildIfDifferent(target: Object, prop: string) {\n    if (!target) {\n        throw TypeError;\n    }\n\n    //global.models.CourseModel.decorator.manytomany.students\n    var meta = MetaUtils.getMetaData(target);\n\n    if (!meta) {\n        return null;\n    }\n\n    var type = Enumerable.from(meta).where(x => x.decoratorType == DecoratorType.CLASS).select(x => x.decorator).firstOrDefault();\n\n    var res = Enumerable.from(meta)\n        .where((x: any) => {\n            var met = <MetaData>x;\n            return (RelationDecorators.indexOf(met.decorator) !== -1 && met.propertyKey === prop);\n        })\n        .toArray();\n\n    if (res.length == 0)\n        return null;\n\n    meta = MetaUtils.getMetaData((<IAssociationParams>res[0].params).itemType);\n    var childType = Enumerable.from(meta).where(x => x.decoratorType == DecoratorType.CLASS).firstOrDefault();\n    //if (type == childType.decorator)\n    //    return null;\n    var repoPath;\n    var param = <IDecoratorParams>childType.params;\n    \n    repoPath = Enumerable.from(pathRepoMap).where(keyVal => pathRepoMap[keyVal.key].schemaName == param.name).select(x => x.key).firstOrDefault();\n    return repoPath;\n}\n\n\n//@document({ name: 'blogs', isStrict: false })\n//export class BlogModel\n//this will return 'blogs' \nexport function getResourceNameFromModel(object: Object): string {\n    var meta = MetaUtils.getMetaData(object, Decorators.DOCUMENT);\n    \n    if (!meta || !meta[0] || !meta[0].params) {\n        return null;\n    }\n    return meta[0].params.name;\n}\n\n//@document({ name: 'blogs', isStrict: false })\n//export class BlogModel\n//this will return 'blogs' \n//if calling from repo w/o object you will atleast know the name of all resources\nexport function getAllResourceNames(): Array<string> {\n    var resources = [];\n\n    var meta = MetaUtils.getMetaDataForDecorators([Decorators.REPOSITORY]);\n\n    return Enumerable.from(meta)\n        .select(x => {\n            return (<MetaData>x.metadata[0]).params.path;\n        })\n        .toArray();\n}\n\nexport function getPrimaryKeyMetadata(target: Object) {\n    var meta = MetaUtils.getMetaData(target, Decorators.FIELD);\n    return Enumerable.from(meta)\n        .where(keyval => keyval.params && keyval.params.primary) // keyval = {[key(propName): string]: Metadata};\n        .select(keyVal => keyVal)\n        .firstOrDefault();\n}\n\nexport function isPromise(object: any) {\n    if (object && (object['then'] instanceof Function || object['promiseDispatch'] instanceof Function))\n        return true;\n    return false;\n}\n\nexport function isJSON(val: any) {\n    if (val && val.toString() == \"[object Object]\")\n        return true;\n    return false;\n}\n\n//export function getAllRelationalMetaDataForField(target: Object, propertyKey?: string): Array<MetaData> {\n//    if (!target) {\n//        throw TypeError;\n//    }\n\n//    propertyKey = propertyKey || CLASSDECORATOR_PROPKEY;\n\n//    var metaKey = MetadataHelper.getMetaKey(target);\n//    if (!metadataRoot.get(metaKey)) {\n//        return null;\n//    }\n\n//    return Enumerable.from(metadataRoot.get(metaKey))\n//        .where((keyVal: any) => Utils.isRelationDecorator(keyVal.key))\n//        .selectMany(keyval => keyval.value) // keyval = {[key(decoratorName): string]: {[key(propName)]: Metadata}};\n//        .where(keyVal => keyVal.key === propertyKey) // keyval = {[key(propName): string]: Metadata};\n//        .select(keyVal => keyVal.value) // keyval = {[key(propName): string]: Metadata};\n//        .toArray();\n//}\n\n//var authenticateByToken = expressJwt({\n//    secret: SecurityConfig.SecurityConfig.tokenSecretkey,\n//    credentialsRequired: true,\n//    getToken: function fromHeaderOrQuerystring(req) {\n//        if (req.headers.authorization && req.headers.authorization.split(' ')[0] === 'Bearer') {\n//            return req.headers.authorization.split(' ')[1];\n//        } else if (req.query && req.query.token) {\n//            return req.query.token;\n//        } else if (req.cookies && req.cookies.authorization) {\n//            return req.cookies.authorization;\n//        }\n//        return null;\n//    }\n//});\n\n//export function ensureLoggedIn() {\n//    if (Config.Security.isAutheticationEnabled == SecurityConfig.AuthenticationEnabled[SecurityConfig.AuthenticationEnabled.disabled]) {\n//        return function (req, res, next) {\n//            next();\n//        }\n//    }\n\n//    //by token\n//    if (Config.Security.authenticationType == SecurityConfig.AuthenticationType[SecurityConfig.AuthenticationType.TokenBased]) {\n//        return authenticateByToken;\n//    }\n\n//    //by password\n//    if (Config.Security.authenticationType == SecurityConfig.AuthenticationType[SecurityConfig.AuthenticationType.passwordBased]) {\n//        return loggedIn();\n//    }\n\n//    return function (req, res, next) {\n//        next();\n//    }\n//}\n"],"sourceRoot":"/source/"}