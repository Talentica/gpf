{"version":3,"sources":["core/dynamic/dynamic-controller.ts"],"names":[],"mappings":"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","file":"core/dynamic/dynamic-controller.js","sourcesContent":["import * as configUtil from '../utils';\nimport {winstonLog} from '../../logging/winstonLog';\nimport {IDynamicRepository, GetRepositoryForName} from './dynamic-repository';\nvar Reflect = require('reflect-metadata');\nimport {router} from '../exports';\nvar jwt = require('jsonwebtoken');\nimport {ISearchPropertyMap, GetAllFindBySearchFromPrototype} from \"../metadata/searchUtils\";\nimport {IActionPropertyMap, GetAllActionFromPrototype} from \"../metadata/actionUtils\";\nimport {MetaData} from '../metadata/metadata';\nimport {MetaUtils} from \"../metadata/utils\";\nimport * as Utils from \"../utils\";\nimport {Decorators} from '../constants/decorators';\nimport {IAssociationParams, IPreauthorizeParams} from '../decorators/interfaces';\nimport {PreAuthService} from '../services/pre-auth-service';\nimport {RepoActions} from '../enums/repo-actions-enum';\nimport {PrincipalContext} from '../../security/auth/principalContext';\nimport {PostFilterService} from '../services/post-filter-service';\nimport {filterProps} from '../interfaces/queryOptions';\nvar multer = require('multer');\n\nimport * as securityImpl from './security-impl';\nimport * as Enumerable from 'linq';\nvar Q = require('q');\nimport {JsonIgnore} from '../enums/jsonignore-enum';\n\nexport class DynamicController {\n    private repository: IDynamicRepository;\n    private path: string;\n    private entity: any;\n\n    constructor(entity: any, repository: IDynamicRepository) {\n        this.repository = repository;\n        this.entity = entity;\n        this.path = \"/\" + Utils.config().Config.basePath + \"/\" + entity.path;\n        this.addSearchPaths();\n        this.addActionPaths();\n        this.addRoutes();\n    }\n\n    ensureLoggedIn(entity: any, action: any) {\n        return function (req, res, next) {\n            PrincipalContext.getSession().run(function () {\n                var meta = MetaUtils.getMetaData(entity, Decorators.ALLOWANONYMOUS, action);\n                if (meta) {\n                    next();\n                }\n                else {\n                    securityImpl.ensureLoggedIn()(req, res, next);\n                }\n            });\n        }\n    }\n\n    isAuthorize(req, res, action: any) {\n        var meta = MetaUtils.getMetaData(this.entity, Decorators.ALLOWANONYMOUS, action);\n        if (meta) return true;\n        if (securityImpl.isAuthorize(req, this.repository, action)) {\n            PrincipalContext.save('req', req);\n            PrincipalContext.save('res', res);\n            return true;\n        }\n        return false;\n    }\n\n    addRoutes() {\n        router.get(this.path,\n            this.ensureLoggedIn(this.entity, RepoActions.findAll),\n            (req, res) => {\n                if (!this.isAuthorize(req, res, RepoActions.findAll)) {\n                    this.sendUnauthorizeError(res, 'unauthorize access for resource ' + this.path);\n                    return;\n                }\n\n                return this.repository.findAll()\n                    .then((result) => {\n                        var resourceName = this.getFullBaseUrl(req);// + this.repository.modelName();\n                        Enumerable.from(result).forEach((x:any) => {\n                            x = this.getHalModel1(x, resourceName + \"/\" + x._id, req, this.repository);\n                        });\n                        //result = this.getHalModels(result,resourceName);\n                        this.sendresult(req, res, result);\n                    }).catch(error => {\n                        this.sendError(res, error);\n                    });\n            });\n\n        router.get(this.path + '/:id',\n            this.ensureLoggedIn(this.entity, RepoActions.findOne),\n            (req, res) => {\n                if (!this.isAuthorize(req, res, RepoActions.findOne)) {\n                    this.sendUnauthorizeError(res, 'unauthorize access for resource ' + this.path);\n                    return;\n                }\n                return this.repository.findOne(req.params.id)\n                    .then((result) => {\n                        var resourceName = this.getFullBaseUrl(req);// + this.repository.modelName();\n                        this.getHalModel1(result, resourceName, req, this.repository);\n                        this.sendresult(req, res, result);\n                    }).catch(error => {\n                        this.sendError(res, error);\n                    });\n            });\n\n        router.get(this.path + '/:id/:prop',\n            this.ensureLoggedIn(this.entity, RepoActions.findChild),\n            (req, res) => {\n                if (!this.isAuthorize(req, res, RepoActions.findChild)) {\n                    this.sendUnauthorizeError(res, 'unauthorize access for resource ' + this.path);\n                    return;\n                }\n\n                return this.repository.findChild(req.params.id, req.params.prop)\n                    .then((result) => {\n                        var parentObj = {};\n                        parentObj[req.params.prop] = result;\n                        var resourceName = this.getFullBaseUrl(req);\n                        this.getHalModel1(parentObj, resourceName + '/' + req.params.id, req, this.repository);\n                        this.sendresult(req, res, parentObj[req.params.prop]);\n                    }).catch(error => {\n                        this.sendError(res, error);\n                    });\n            });\n\n        router.post(this.path,\n            this.ensureLoggedIn(this.entity, RepoActions.post),\n            (req, res) => {\n                if (!this.isAuthorize(req, res, RepoActions.post)) {\n                    this.sendUnauthorizeError(res, 'unauthorize access for resource ' + this.path);\n                    return;\n                }\n\n                if (!Array.isArray(req.body)) {\n                    this.getModelFromHalModel(req.body, req, res);\n                    return this.repository.post(req.body)\n                        .then((result) => {\n                            var resourceName = this.getFullBaseUrlUsingRepo(req, this.repository.modelName());\n                            this.getHalModel1(result, resourceName + '/' + result['_id'], req, this.repository);\n                            this.sendresult(req, res, result);\n                        }).catch(error => {\n                            this.sendError(res, error);\n                        });\n                }\n                else {\n                    Enumerable.from(req.body).forEach(x => {\n                        this.getModelFromHalModel(x, req, res);\n                    });\n                    return this.repository.bulkPost(req.body as Array<any>)\n                        .then((result) => {\n                            Enumerable.from(result).forEach(x => {\n                                var resourceName = this.getFullBaseUrlUsingRepo(req, this.repository.modelName());\n                                this.getHalModel1(x, resourceName + '/' + x['_id'], req, this.repository);\n                            });\n                            this.sendresult(req, res, result);\n                        }).catch(error => {\n                            this.sendError(res, error);\n                        });\n                }\n            });\n\n\n\n        //router.post(this.path + '/:id/:prop/:value', (req, res) => {\n        //    return this.sendresult(req, res, req.params);\n        //});\n\n        // delete any property value\n        router.delete(this.path + \"/:id/:prop\",\n            this.ensureLoggedIn(this.entity, RepoActions.delete),\n            (req, res) => {\n                if (!this.isAuthorize(req, res, RepoActions.delete)) {\n                    this.sendUnauthorizeError(res, 'unauthorize access for resource ' + this.path);\n                    return;\n                }\n\n                return this.repository.delete(req.params.id)\n                    .then(result => {\n                        this.sendresult(req, res, result);\n                    }).catch(error => {\n                        console.log(error);\n                        this.sendError(res, error);\n                    });\n            });\n\n        // add or update any property value\n        router.put(this.path + \"/:id\",\n            this.ensureLoggedIn(this.entity, RepoActions.put),\n            (req, res) => {\n                if (!this.isAuthorize(req, res, RepoActions.put)) {\n                    this.sendUnauthorizeError(res, 'unauthorize access for resource ' + this.path);\n                    return;\n                }\n\n                this.getModelFromHalModel(req.body, req, res);\n                return this.repository.put(req.params.id, req.body)\n                    .then((result) => {\n                        var resourceName = this.getFullBaseUrl(req);// + this.repository.modelName();\n                        this.getHalModel1(result, resourceName, req, this.repository);\n                        this.sendresult(req, res, result);\n                    }).catch(error => {\n                        console.log(error);\n                        this.sendError(res, error);\n                    });\n            });\n\n        // add or update any property value\n        router.put(this.path,\n            this.ensureLoggedIn(this.entity, RepoActions.put),\n            (req, res) => {\n                if (!this.isAuthorize(req, res, RepoActions.put)) {\n                    this.sendUnauthorizeError(res, 'unauthorize access for resource ' + this.path);\n                    return;\n                }\n\n                if (!Array.isArray(req.body)) {\n                    this.sendError(res, 'Invalid data.');\n                    return;\n                }\n\n                Enumerable.from(req.body).forEach(x => {\n                    this.getModelFromHalModel(x, req, res);\n                });\n                return this.repository.bulkPut(req.body as Array<any>)\n                    .then((result) => {\n                        this.sendresult(req, res, result);\n                    }).catch(error => {\n                        console.log(error);\n                        this.sendError(res, error);\n                    });\n            });\n\n        router.delete(this.path + \"/:id\",\n            this.ensureLoggedIn(this.entity, RepoActions.delete),\n            (req, res) => {\n                if (!this.isAuthorize(req, res, RepoActions.delete)) {\n                    this.sendUnauthorizeError(res, 'unauthorize access for resource ' + this.path);\n                    return;\n                }\n\n                return this.repository.delete(req.params.id)\n                    .then((result) => {\n                        this.sendresult(req, res, result);\n                    }).catch(error => {\n                        console.log(error);\n                        this.sendError(res, error);\n                    });\n            });\n\n        // bulk delete\n        router.delete(this.path,\n            this.ensureLoggedIn(this.entity, RepoActions.delete),\n            (req, res) => {\n                if (!this.isAuthorize(req, res, RepoActions.delete)) {\n                    this.sendUnauthorizeError(res, 'unauthorize access for resource ' + this.path);\n                    return;\n                }\n\n                if (!Array.isArray(req.body)) {\n                    this.sendError(res, 'Invalid data.');\n                    return;\n                }\n\n                var ids = req.body;\n                if (ids.length == 0) {\n                    this.sendError(res, 'Invalid data.');\n                    return;\n                }\n\n                return this.repository.bulkDel(ids)\n                    .then((result) => {\n                        this.sendresult(req, res, result);\n                    }).catch(error => {\n                        console.log(error);\n                        this.sendError(res, error);\n                    });\n            });\n\n        router.patch(this.path + \"/:id\",\n            this.ensureLoggedIn(this.entity, RepoActions.patch),\n            (req, res) => {\n                if (!this.isAuthorize(req, res, RepoActions.patch)) {\n                    this.sendUnauthorizeError(res, 'unauthorize access for resource ' + this.path);\n                    return;\n                }\n\n                this.getModelFromHalModel(req.body, req, res);\n                return this.repository.patch(req.params.id, req.body)\n                    .then((result) => {\n                        var resourceName = this.getFullBaseUrl(req);// + this.repository.modelName();\n                        this.getHalModel1(result, resourceName, req, this.repository);\n                        this.sendresult(req, res, result);\n                    }).catch(error => {\n                        this.sendError(res, error);\n                    });\n            });\n\n    }\n\n    addSearchPaths() {\n        let modelRepo = this.repository.getEntityType();\n        let decoratorFields = MetaUtils.getMetaData(modelRepo.model.prototype, Decorators.FIELD);\n        let fieldsWithSearchIndex =\n            Enumerable.from(decoratorFields)\n                .where(ele => {\n                    var meta: MetaData = ele as MetaData;\n                    return meta.propertyKey\n                        && meta\n                        && meta.params\n                        && (<any>meta.params).searchIndex;\n                }).toArray();\n\n        let searchPropMap = GetAllFindBySearchFromPrototype(modelRepo);\n\n        var search = {};\n        searchPropMap.forEach(map => {\n            this.addRoutesForAllSearch(map, fieldsWithSearchIndex);\n            search[map.key] = { \"href\": map.key, \"params\": map.args };\n        });\n\n        router.get(this.path + \"/searchAll\", this.ensureLoggedIn(this.entity, RepoActions.findAll), (req, res) => {\n            if (!this.isAuthorize(req, res, RepoActions.findAll)) {\n                this.sendUnauthorizeError(res, 'unauthorize access for resource ' + this.path);\n                return;\n            }\n            return this.searchFromDb(req, res, RepoActions.findAll);\n        });\n        router.get(this.path + \"/count\", this.ensureLoggedIn(this.entity, RepoActions.findAll), (req, res) => {\n\n            if (!this.isAuthorize(req, res, RepoActions.findAll)) {\n                this.sendUnauthorizeError(res, 'unauthorize access for resource ' + this.path);\n                return;\n            }\n            return this.countFromDb(req, res);\n        });\n\n\n        router.get(this.path + \"/search\", this.ensureLoggedIn(this.entity, 'search'), (req, res) => {\n            let links = { \"self\": { \"href\": this.getFullBaseUrlUsingRepo(req, this.repository.modelName()) + \"/search\" } };\n            for (var prop in search) {\n                var lnk = {};\n                lnk['href'] = this.getFullBaseUrlUsingRepo(req, this.repository.modelName()) + \"/search/\" + search[prop][\"href\"];\n                lnk['params'] = search[prop]['params'];\n                links[prop] = lnk;\n            }\n            this.sendresult(req, res, links);\n        });\n    }\n\n    private countFromDb(req, res) {\n        var resourceName = this.getFullBaseUrlUsingRepo(req, this.repository.modelName());\n        var queryObj = req.query;\n        var options = {};\n        return this.repository.countWhere(queryObj).then((count) => {\n            this.sendresult(req, res, { result: count });\n        });\n    }\n\n    addActionPaths() {\n        let modelRepo = this.repository.getEntityType();\n        let searchPropMap = GetAllActionFromPrototype(modelRepo) as Array<IActionPropertyMap>;\n\n        var actions = {};\n        searchPropMap.forEach(map => {\n            var meta = MetaUtils.getMetaData(this.entity, Decorators.UPLOAD, map.key);\n            if (meta) {\n                meta.params.destination\n                router.post(this.path + \"/action/\" + map.key, this.ensureLoggedIn(this.entity, map.key), multer({\n                    storage: multer.diskStorage({\n                        destination: function (req, file, callback) {\n                            callback(null, meta.params.destination);\n                        }\n                    })\n                }).any(), (req, res) => {\n                    Enumerable.from(req.query).forEach((x: any) => {\n                        req.body[x.key] = x.value;\n                    });\n                    this.actionPathRender(req, res, map, modelRepo, actions, true);\n                });\n            }\n            else {\n                router.post(this.path + \"/action/\" + map.key, this.ensureLoggedIn(this.entity, map.key), (req, res) => {\n                    this.actionPathRender(req, res, map, modelRepo, actions, false);\n                });\n                router.put(this.path + \"/action/\" + map.key, this.ensureLoggedIn(this.entity, map.key), (req, res) => {\n                    this.actionPathRender(req, res, map, modelRepo, actions, false);\n                });\n            }\n            actions[map.key] = { \"href\": map.key, \"params\": map.args };\n        });\n\n        router.get(this.path + \"/action\", this.ensureLoggedIn(this.entity, 'action'), (req, res) => {\n            let links = { \"self\": { \"href\": this.getFullBaseUrlUsingRepo(req, this.repository.modelName()) + \"/action\" } };\n            for (var prop in actions) {\n                var lnk = {};\n                lnk[\"href\"] = this.getFullBaseUrlUsingRepo(req, this.repository.modelName()) + \"/action/\" + actions[prop][\"href\"];\n                lnk['params'] = actions[prop][\"params\"];\n                links[prop] = lnk;\n            }\n            this.sendresult(req, res, links);\n        });\n    }\n\n    private actionPathRender(req, res, map, modelRepo, actions, hasFiles) {\n        if (!this.isAuthorize(req, res, map.key)) {\n            this.sendUnauthorizeError(res, 'unauthorize access for resource ' + this.path + \"/action/\" + map.key);\n            return;\n        }\n\n        if (req.method == \"POST\") {\n            this.ensureALLRequiredPresent(modelRepo.model.prototype, req.body, req, res);\n        }\n        this.removeJSONIgnore(modelRepo.model.prototype, req.body, req);\n        this.invokeModelFunction(map, req, res, actions, hasFiles);\n    }\n\n    private mergeEntity(req): Q.Promise<any> {\n        return this.repository.findOne(req.body.id).then(result => {\n            return Object.keys(result).forEach(attribute => {\n                if (!req.body[attribute]) {\n                    req.body[attribute] = result[attribute];\n                }\n            });\n        }).catch(error => {\n            winstonLog.logError('[DynamicController: mergeEntity]: mergeEntity error ' + error);\n        });\n    }\n\n    private invokeModelFunction(map: ISearchPropertyMap, req: any, res: any, actions, hasFiles: boolean) {\n        try {\n            let modelRepo = this.repository.getEntityType();\n            var param = [];\n            if (hasFiles) {\n                param.push(req.files);\n            }\n            for (var prop in req.body) {\n                param.push(req.body[prop]);\n            }\n            param.push(req);\n            var ret = modelRepo[map.key].apply(modelRepo, param);\n            if (Utils.isPromise(ret)) { // is thenable\n                var prom: Q.Promise<any> = <Q.Promise<any>>ret;\n                prom.then(x => {\n                    this.sendresult(req, res, x);\n                }).catch(err => {\n                    this.sendError(res, err);\n                });;\n            }\n            else {\n                this.sendresult(req, res, ret);\n            }\n        }\n        catch (err) {\n            this.sendError(res, err);\n        }\n    }\n\n    private addRoutesForAllSearch(map: ISearchPropertyMap, fieldsWithSearchIndex: any[]) {\n        let searchFromDb: boolean = true;\n        if (configUtil.config().Config.ApplyElasticSearch) {\n            let areAllSearchFieldsIndexed = Enumerable.from(map.args).intersect(fieldsWithSearchIndex).count() == map.args.length;\n            searchFromDb = !areAllSearchFieldsIndexed;\n        }\n\n        // If all the search fields are not indexed in the elasticsearch, return data from the database\n        // Keeping different router.get to avoid unncessary closure at runtime\n        if (searchFromDb) {\n            router.get(this.path + \"/search/\" + map.key, this.ensureLoggedIn(this.entity, map.key), (req, res) => {\n                return this.isPreAuthenticated(req, res, map.key).then(isAllowed => {\n                    if (isAllowed) {\n                        return this.searchFromDb(req, res, map.key);\n                    }\n                });\n            });\n        }\n        else { // Search from elasticsearch\n            let model: any = this.repository.getModel();\n            router.get(this.path + \"/search/\" + map.key, (req, res) => {\n                return this.isPreAuthenticated(req, res, map.key).then(isAllowed => {\n                    if (isAllowed) {\n                        return this.searchUsingElastic(req, res, model, map);\n                    }\n                });\n            });\n        }\n    }\n\n    private isPreAuthenticated(req, res, propertyKey): Q.Promise<any> {\n        var meta = MetaUtils.getMetaData(this.entity, Decorators.ALLOWANONYMOUS, propertyKey);\n        if (meta) return Q.when(true);\n\n        meta = MetaUtils.getMetaData(this.entity, Decorators.PREAUTHORIZE, propertyKey);\n        if (meta) {\n            return PreAuthService.isPreAuthenticated([req.body], meta.params, propertyKey).then(isAllowed => {\n                if (!isAllowed) {\n                    this.sendUnauthorizeError(res, 'unauthorize access for resource ' + this.path);\n                }\n                return isAllowed;\n            });\n        }\n        return Q.when(true);\n    }\n\n    private postFilter(result: any, propertyKey: any): Q.Promise<any> {\n        var meta = MetaUtils.getMetaData(this.entity, Decorators.POSTFILTER, propertyKey);\n        if (meta) {\n            return PostFilterService.postFilter(result, meta.params);\n        }\n        return Q.when(result);\n    }\n\n    private searchFromDb(req, res, propertyKey) {\n        var resourceName = this.getFullBaseUrlUsingRepo(req, this.repository.modelName());\n        var queryObj = req.query;\n        var options = {};\n        Enumerable.from(queryObj).forEach((x: any) => {\n            if (filterProps.indexOf(x.key) >= 0) {\n                options[x.key] = x.value;\n                delete queryObj[x.key];\n            }\n            else {\n                var val = queryObj[x.key];\n                var i = val.indexOf('%LIKE%');\n                if (i == 0) {\n                    // contains\n                    val = val.replace('%LIKE%', '');\n                    queryObj[x.key] = {\n                        $regex: '.*' + val + '.*'\n                    }\n                }\n                else {\n                    i = val.indexOf('%START%');\n                    if (i == 0) {\n                        // starts with\n                        val = val.replace('%START%', '');\n                        queryObj[x.key] = {\n                            $regex: '^' + val + '.*'\n                        }\n                    }\n                }\n            }\n        });\n        console.log(\"Querying Database\");\n        return this.repository\n            .findWhere(queryObj, null, options)\n            .then(result => {\n                return this.postFilter(result, propertyKey);\n            })\n            .then((result: Array<any>) => {\n                result.forEach(obj => {\n                    this.getHalModel1(obj, resourceName + \"/\" + obj[\"_id\"], req, this.repository);\n                });\n                this.sendresult(req, res, result);\n            });\n    }\n\n    private searchUsingElastic(req, res, model, map) {\n        let queryObj = req.query;\n        let musts = map.args.map(function (arg) {\n            let s = '{\"' + arg + '\":' + \"0\" + \"}\";\n            let obj = JSON.parse(s);\n            obj[arg] = queryObj[arg];\n            return { \"match\": obj };\n        });\n        let query = {\n            \"query\": {\n                \"bool\": {\n                    \"must\":\n                    musts\n                }\n            }\n        };\n        winstonLog.logInfo('[DynamicController: addRoutesForAllSearch]: query ' + JSON.stringify(query));\n        console.log(\"Querying Elastic search with %s\", JSON.stringify(query));\n        return model\n            .search(query, (err, rr) => {\n                if (err) {\n                    console.error(err);\n                    this.sendresult(req, res, err);\n                }\n                else {\n                    console.log(rr);\n                    this.postFilter(rr, map.key).then(result => {\n                        this.sendresult(req, res, result);\n                    });\n                }\n            });\n    }\n\n    private getHalModel(model: any, resourceName: string): any {\n        var selfUrl = {};\n        selfUrl[\"href\"] = resourceName + \"/\" + model._id;\n        var selfObjec = {};\n        selfObjec[\"self\"] = selfUrl;\n        model[\"_links\"] = selfObjec;\n\n        return model;\n    }\n\n    private getModelFromHalModel(model: any, req: any, res: any) {\n        if (model[\"_links\"]) {\n            delete model[\"_links\"];\n        }\n        //code to handle jsonignore\n        let modelRepo = this.repository.getEntityType();\n        //code to handle @required fields.\n        if (req.method == \"POST\") {\n            this.ensureALLRequiredPresent(modelRepo.model.prototype, model, req, res);\n        }\n        this.removeJSONIgnore(modelRepo.model.prototype, model, req);\n\n        //code to change url to id, for relations.\n        if (req.method != \"GET\") {\n            this.changeUrlToId(model, modelRepo.model.prototype);\n        }\n    }\n\n    private changeUrlToId(model: any, entity: any) {\n        var relations: Array<MetaData> = Utils.getAllRelationsForTargetInternal(entity) || [];\n        relations.forEach(relation => {\n            var param = <IAssociationParams>relation.params;\n            if (!model[relation.propertyKey]) return;\n\n            if (model[relation.propertyKey] instanceof Array) {\n                var allElements = model[relation.propertyKey];\n                if (allElements instanceof Array) {\n                    allElements.forEach((element, index) => {\n                        var arrElement = {};\n                        arrElement['value'] = element;\n                        this.trimUrl(arrElement, param);\n                        allElements[index] = arrElement['value'];\n                    });\n                }\n                return;\n            }\n            var element = {};\n            element['value'] = model[relation.propertyKey];\n            this.trimUrl(element, param);\n            model[relation.propertyKey] = element['value'];\n        });\n    }\n\n    private trimUrl(element, param) {\n        if (element.value instanceof Object) {\n            this.changeUrlToId(element.value, param.itemType);\n        } else {\n            if (element.value.indexOf('http') > -1 && element.value.indexOf('/') > -1) {\n                element.value = element.value.trim();\n                element.value = element.value.split(\"/\").pop();\n            }\n        }\n\n    }\n\n    private getHalModel1(model: any, resourceName: string, req, repo: any): any {\n        var selfUrl = {};\n        selfUrl[\"href\"] = resourceName;// + \"/\" + model._id;\n        model[\"_links\"] = {};\n        model[\"_links\"][\"self\"] = selfUrl;\n        //add associations \n        //read metadata and get all relations names\n        let modelRepo = repo.getEntityType();\n        this.removeJSONIgnore(modelRepo.model.prototype, model, req);\n        var relations: Array<MetaData> = Utils.getAllRelationsForTargetInternal(modelRepo.model.prototype) || [];\n        relations.forEach(relation => {\n            var relUrl = {};\n            relUrl[\"href\"] = resourceName + \"/\" + relation.propertyKey;\n            model[\"_links\"][relation.propertyKey] = relUrl;\n            var repo = GetRepositoryForName(relation.params.rel);\n            if (repo) {\n                var param = relation.params;\n                if (!param.embedded && !param.eagerLoading) { return model;}\n                if (model[relation.propertyKey] instanceof Array) {\n                    if (model[relation.propertyKey] && model[relation.propertyKey].length && Utils.isJSON(model[relation.propertyKey][0])) {\n                        model[relation.propertyKey].forEach(key => {\n                            var url = this.getFullBaseUrlUsingRepo(req, repo.modelName());\n                            this.getHalModel1(key, url + '/' + key['_id'], req, repo);\n                        });\n                    }\n                } else {\n                    if (model[relation.propertyKey] && Utils.isJSON(model[relation.propertyKey])) {\n                        var url = this.getFullBaseUrlUsingRepo(req, repo.modelName());\n                        this.getHalModel1(model[relation.propertyKey], url + '/' + model[relation.propertyKey]['_id'], req, repo);\n                    }\n                }\n            }\n        });\n        return model;\n    }\n\n\n    private removeJSONIgnore(entity: any, model: any, req: any) {\n        if (!model) return;\n        this.jsonIgnoreModels(entity, model, req);\n        var relations: Array<MetaData> = Utils.getAllRelationsForTargetInternal(entity) || [];\n        relations.forEach(relation => {\n            var param = <IAssociationParams>relation.params;\n            if (param.embedded || param.eagerLoading) {\n                this.removeJSONIgnore(param.itemType, model[relation.propertyKey], req);\n            }\n        });\n    }\n\n    private jsonIgnoreModels(entity, model, req) {\n        var decFields = MetaUtils.getMetaData(entity, Decorators.JSONIGNORE);\n        if (decFields) {\n            decFields.forEach(field => {\n                if (model instanceof Array) {\n                    model.forEach(mod => {\n                        this.removePropertyFromModel(mod, field, req);\n                    });\n                } else {\n                    this.removePropertyFromModel(model, field, req);\n                }\n            });\n        }\n    }\n\n    private removePropertyFromModel(model: any, field: any, req: any) {\n        var jsonIgnoreParams = field.params;\n        if (jsonIgnoreParams && jsonIgnoreParams == JsonIgnore.READ && req.method != 'GET') {\n            if (model[field.propertyKey]) {\n                delete model[field.propertyKey];\n            }\n        }\n\n        if (Object.keys(jsonIgnoreParams).length == 0 && model[field.propertyKey]) {\n            delete model[field.propertyKey];\n        }\n    }\n\n    private ensureALLRequiredPresent(entity: any, model: any, req: any, res: any) {\n        if (!model) return;\n        var decFields = MetaUtils.getMetaData(entity, Decorators.REQUIRED);\n        if (decFields) {\n            decFields.forEach(field => {\n                if (model instanceof Array) {\n                    model.forEach(mod => {\n                        if (mod instanceof Object && !mod[field.propertyKey]) {\n                            this.sendBadRequest(res, \"required field not present in model\");\n                        }\n                    });\n                } else {\n                    if (model instanceof Object && !model[field.propertyKey]) {\n                        this.sendBadRequest(res, \"required field not present in model\");\n                    }\n                }\n            });\n        }\n        var relations: Array<MetaData> = Utils.getAllRelationsForTargetInternal(entity) || [];\n        relations.forEach(relation => {\n            var param = <IAssociationParams>relation.params;\n            if (param.embedded || param.eagerLoading) {\n                this.ensureALLRequiredPresent(param.itemType, model[relation.propertyKey], req, res);\n            }\n        });\n    }\n\n    private getHalModels(models: Array<any>, resourceName: string): any {\n        var halresult = {};\n        halresult[\"_links\"] = { \"self\": { \"href\": resourceName }, \"search\": { \"href\": \"/search\" } };\n        models.forEach(model => {\n            this.getHalModel(model, resourceName);\n        });\n        halresult[\"_embedded\"] = models;\n        return halresult;\n    }\n\n    private sendUnauthorizeError(res, error) {\n        winstonLog.logError('[DynamicController: sendUnauthorizeError]: authorization error ' + error);\n        res.set(\"Content-Type\", \"application/json\");\n        res.send(403, JSON.stringify(error, null, 4));\n    }\n\n    private sendError(res, error) {\n        winstonLog.logError('[DynamicController: sendError]: error ' + error);\n        res.set(\"Content-Type\", \"application/json\");\n        res.send(500, JSON.stringify(error, null, 4));\n    }\n\n    private sendBadRequest(res, error) {\n        winstonLog.logError('[DynamicController: sendBadRequest]: bad request ' + error);\n        res.set(\"Content-Type\", \"application/json\");\n        res.send(400, JSON.stringify(error, null, 4));\n    }\n\n    private sendresult(req, res, result) {\n        res.set(\"Content-Type\", \"application/json\");\n        res.send(JSON.stringify(result, null, 4));\n    }\n\n    private getFullDataUrl(req): string {\n        var fullbaseUr: string = \"\";\n        fullbaseUr = this.getProtocol(req) + '://' + req.get('host') + \"/\" + configUtil.config().Config.basePath;\n        return fullbaseUr;\n    }\n\n    private getFullBaseUrl(req): string {\n        var fullbaseUr: string = \"\";\n        fullbaseUr = this.getProtocol(req) + '://' + req.get('host') + req.originalUrl;\n        return fullbaseUr;\n    }\n\n    private getFullBaseUrlUsingRepo(req, repoName): string {\n        var fullbaseUr: string = \"\";\n        fullbaseUr = this.getProtocol(req) + '://' + req.get('host') + '/' + configUtil.config().Config.basePath + '/' + repoName;\n        return fullbaseUr;\n    }\n\n    private getProtocol(req): string {\n        if (req.headers && req.headers[\"x-arr-ssl\"]) {\n            return \"https\";\n        }\n        else {\n            return req.protocol;\n        }\n    }\n}\n"],"sourceRoot":"/source/"}