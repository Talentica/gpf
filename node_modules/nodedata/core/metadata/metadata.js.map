{"version":3,"sources":["core/metadata/metadata.ts"],"names":[],"mappings":";AAGA,MAAY,YAAY,WAAM,0BAA0B,CAAC,CAAA;AAazD;;;GAGG;AACH;IAuBI,YAAY,MAAc,EAAE,QAAiB,EAAE,WAAyB;QAtBxE;;UAEE;QACF,WAAM,GAAW,IAAI,CAAC;QAoBlB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC,WAAW,CAAC;QAC3C,IAAI,CAAC,UAAU,GAAG,WAAW,CAAC,UAAU,CAAC;QACzC,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC,SAAS,CAAC;QACvC,IAAI,CAAC,aAAa,GAAG,WAAW,CAAC,aAAa,CAAC;QAC/C,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC;QACjC,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC,IAAI,IAAI,YAAY,CAAC,aAAa,CAAC,MAAM,EAAE,WAAW,CAAC,WAAW,CAAC,CAAC;QACpG,IAAI,CAAC,UAAU,GAAG,WAAW,CAAC,UAAU,IAAI,YAAY,CAAC,aAAa,CAAC,MAAM,EAAE,WAAW,CAAC,WAAW,CAAC,CAAC;QACxG,IAAI,CAAC,UAAU,GAAG,WAAW,CAAC,UAAU,IAAI,YAAY,CAAC,aAAa,CAAC,MAAM,EAAE,WAAW,CAAC,WAAW,CAAC,CAAC;IAC5G,CAAC;IAED,OAAO;QACH,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;YACtC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;QAChC,CAAC;QACD,IAAI,CAAC,CAAC;YACF,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;QAC7B,CAAC;IACL,CAAC;AACL,CAAC;AA5CY,gBAAQ,WA4CpB,CAAA","file":"core/metadata/metadata.js","sourcesContent":["import {DecoratorType} from '../enums/decorator-type';\nimport {ParamTypeCustom} from './param-type-custom';\nimport {ReflectConstants} from '../constants';\nimport * as ReflectUtils from '../reflect/reflect-utils';\n\nexport interface IMetaOptions {\n    decorator: string;\n    decoratorType: DecoratorType;\n    params?: any;\n    propertyKey?: string;\n    paramIndex?: number;\n    paramTypes?: Array<ParamTypeCustom>;\n    type?: ParamTypeCustom;\n    returnType?: ParamTypeCustom;\n}\n\n/**\n * Creates new metadata object.\n * @class\n */\nexport class MetaData {\n    /** Function prototype where decorator is declared.\n    * @member {Object}\n    */\n    target: Object = null;\n    /**\n    * The decorator is declared on static method/property.\n    * @member {Boolean}\n    */\n    isStatic: boolean;\n    /**\n    * The name of the method/property/paramter.\n    * @member {string}\n    */\n    propertyKey: string;\n    decorator: string;\n    propertyType: ParamTypeCustom;\n    returnType: ParamTypeCustom;\n    paramTypes: Array<ParamTypeCustom>\n    params: any;\n    decoratorType: DecoratorType;\n    paramIndex: number;\n\n    constructor(target: Object, isStatic: boolean, metaOptions: IMetaOptions) {\n        this.target = target;\n        this.isStatic = isStatic;\n        this.propertyKey = metaOptions.propertyKey;\n        this.paramIndex = metaOptions.paramIndex;\n        this.decorator = metaOptions.decorator;\n        this.decoratorType = metaOptions.decoratorType;\n        this.params = metaOptions.params;\n        this.propertyType = metaOptions.type || ReflectUtils.getDesignType(target, metaOptions.propertyKey);\n        this.returnType = metaOptions.returnType || ReflectUtils.getReturnType(target, metaOptions.propertyKey);\n        this.paramTypes = metaOptions.paramTypes || ReflectUtils.getParamTypes(target, metaOptions.propertyKey);      \n    }\n\n    getType(): any {\n        if (this.params && this.params.itemType) {\n            return this.params.itemType;\n        }\n        else {\n            return this.propertyType;\n        }\n    }\n}\n"],"sourceRoot":"/source/"}