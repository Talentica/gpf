"use strict";
const ReflectUtils = require('../reflect/reflect-utils');
/**
 * Creates new metadata object.
 * @class
 */
class MetaData {
    constructor(target, isStatic, metaOptions) {
        /** Function prototype where decorator is declared.
        * @member {Object}
        */
        this.target = null;
        this.target = target;
        this.isStatic = isStatic;
        this.propertyKey = metaOptions.propertyKey;
        this.paramIndex = metaOptions.paramIndex;
        this.decorator = metaOptions.decorator;
        this.decoratorType = metaOptions.decoratorType;
        this.params = metaOptions.params;
        this.propertyType = metaOptions.type || ReflectUtils.getDesignType(target, metaOptions.propertyKey);
        this.returnType = metaOptions.returnType || ReflectUtils.getReturnType(target, metaOptions.propertyKey);
        this.paramTypes = metaOptions.paramTypes || ReflectUtils.getParamTypes(target, metaOptions.propertyKey);
    }
    getType() {
        if (this.params && this.params.itemType) {
            return this.params.itemType;
        }
        else {
            return this.propertyType;
        }
    }
}
exports.MetaData = MetaData;

//# sourceMappingURL=metadata.js.map
