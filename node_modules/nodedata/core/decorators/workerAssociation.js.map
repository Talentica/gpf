{"version":3,"sources":["core/decorators/workerAssociation.ts"],"names":[],"mappings":"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","file":"core/decorators/workerAssociation.js","sourcesContent":["import {WorkerAssociation} from './interfaces/workerAssociation-params';\nimport {MetaUtils } from \"../metadata/utils\";\nimport {Decorators} from '../constants/decorators';\nimport {DecoratorType} from '../enums/decorator-type';\nvar child_process = require('child_process');\nimport * as Enumerable from 'linq';\nimport {winstonLog} from '../../logging/winstonLog';\nimport {WorkerParams} from './interfaces/worker-params';\nimport {workerParamsDto} from \"./interfaces/workerParamsDto\";\nimport * as configUtil from '../utils';\nimport {PrincipalContext} from '../../security/auth/principalContext';\nvar fs = require('fs');\nvar defaultWorkerName=\"core/decorators/worker.js\";\nvar cls = require('continuation-local-storage');\n\nexport function Worker(params?: WorkerAssociation): any {\nparams = params || <any>{};\nvar session = PrincipalContext.getSession();\n\n return function (target: any, propertyKey: string, descriptor: any) {\n        winstonLog.logDebug(\"target is: \" + JSON.stringify(target) + \" propertyKey \" + JSON.stringify(propertyKey) + \" descriptor is:  \" + JSON.stringify(descriptor));\n        MetaUtils.addMetaData(target,\n            {\n                decorator: Decorators.WORKER,\n                decoratorType: DecoratorType.METHOD,\n                params: params,\n                propertyKey: propertyKey\n            });\n            var originalMethod = descriptor.value;\n            winstonLog.logDebug(\"Input params for worker:  \" + JSON.stringify(params.workerParams));\n\n            descriptor.value =preProcessHandler(params, target, propertyKey, descriptor, originalMethod, \n            Decorators.WORKER);\n    }\n\n function getDebugOption() {\n     var execArgv = (<any>process).execArgv.slice(); //create args shallow copy\n     var debugPort = (<any>process).debugPort + 1;\n\n     for (var i = 0; i < execArgv.length; i++) {\n         var match = execArgv[i].match(/^(--debug|--debug-brk)(=\\d+)?$/);\n         if (match) {\n             execArgv[i] = match[1] + '=' + debugPort;\n             break;\n         }\n     }\n\n     //var options = { env: process.env,  silent:false, execArgv: execArgv, cwd: targetProcessCwd };\n     var options = { env: process.env, silent: false, execArgv: execArgv };\n     return options;\n }\n\nfunction preProcessHandler(params, target, propertyKey, descriptor, originalMethod, type: string) {\n     return function () {\n         if(MetaUtils.childProcessId || !configUtil.config().Config.isMultiThreaded){\n            winstonLog.logInfo(\"Executing method from child Process with id: \"+process.pid);\n            return originalMethod.apply(this, arguments);\n         }\n\n        var meta = MetaUtils.getMetaData(target, type, propertyKey);\n        var targetObjectId: any;\n        if (params.indexofArgumentForTargetObjectId)\n            targetObjectId = arguments[params.indexofArgumentForTargetObjectId];\n\n\n\n        if (params.indexofArgumentForTargetObject)\n            targetObjectId = arguments[params.indexofArgumentForTargetObject]._id;\n\n                var serviceName,servicemethodName,paramsArguments;\n                var name=params.name;\n                var workerParams = new workerParamsDto();\n            \n            if (params.workerParams == null) {\n                winstonLog.logInfo(\"No Params sent with Worker()\");\n                workerParams.workerName = defaultWorkerName; //default service to be executed.\n                winstonLog.logInfo(\"Calling Default worker:  \" + workerParams.workerName);\n\n                serviceName = this.__proto__.constructor.name;\n                workerParams.serviceName = serviceName;\n\n                servicemethodName =propertyKey;\n                workerParams.servicemethodName = servicemethodName;\n\n                paramsArguments = arguments;\n                workerParams.arguments = paramsArguments;\n            }\n            else {\n                if (!params.workerParams.workerName) {\n                    workerParams.workerName = defaultWorkerName;\n                    winstonLog.logInfo(\"Calling Default worker:  \" + workerParams.workerName);\n                }\n                else {\n                    workerParams.workerName = params.workerParams.workerName;\n                    winstonLog.logInfo(\"Calling worker:  \" + workerParams.workerName);\n                }\n\n                if(params.workerParams.serviceName != null && params.workerParams.serviceName != ''){\n                    serviceName = params.workerParams.serviceName;\n                    workerParams.serviceName = serviceName; \n                }else{\n                    serviceName = this.__proto__.constructor.name;\n                    workerParams.serviceName = serviceName;\n                }\n\n                if(params.workerParams.servicemethodName != null && params.workerParams.servicemethodName != ''){\n                    servicemethodName = params.workerParams.servicemethodName;\n                    workerParams.servicemethodName = servicemethodName;\n                }\n                else{\n                    servicemethodName =propertyKey;\n                    workerParams.servicemethodName = servicemethodName;\n                }\n\n                if(params.workerParams.arguments != null && params.workerParams.arguments != ''){\n                    paramsArguments = params.workerParams.arguments;\n                    workerParams.arguments = paramsArguments;\n                }else{\n                    paramsArguments = arguments;\n                    workerParams.arguments = paramsArguments;\n                }\n                \n            }\n\n            workerParams.arguments = Array.prototype.slice.call(workerParams.arguments);\n            workerParams.arguments = <any>workerParams.arguments.slice(0, originalMethod.length);\n                winstonLog.logInfo(\"Worker Params: \"+ JSON.stringify(workerParams)); \n            \n                if(workerParams.serviceName != null){\n                    console.log(\"Forking a new child_process: \" + workerParams.workerName);\n                    var workerProcess = child_process.fork(workerParams.workerName, [], getDebugOption());\n                \n           //if(session!=null){   // Setting principalContext on the worker params;\n\n                     PrincipalContext.save('workerParams',JSON.stringify(workerParams));\n                     workerParams.principalContext=PrincipalContext.getAllKeyValues();\n                     if(workerParams.principalContext['req']){\n                            delete workerParams.principalContext['req'];\n                     }\n                     if(workerParams.principalContext['res']){\n                            delete workerParams.principalContext['res'];\n                     }\n                     winstonLog.logDebug(\"Context at Worker: \"+ JSON.stringify(workerParams.principalContext));\n                     winstonLog.logInfo(\"PrincipalConext at Parent: \"+ JSON.stringify(PrincipalContext.getSession()));\n                   //}\n                    \n                if(workerProcess.error==null){\n                     winstonLog.logInfo('Child process created with id: '+ workerProcess.pid);\n                     \n                     workerProcess.on('message', function (message) {\n                     winstonLog.logInfo('message from Child Process : ' + JSON.stringify(message));\t\n                    });\n                    \n                     workerProcess.on('error', function (err) {\n                     winstonLog.logError('Error : ' + err);\n                    });\n\n                     workerProcess.on('close', function (code,signal) {\n                     winstonLog.logInfo('Child process exited with code: '+code + ' signal: ' +signal);\t\n                     });\n                    \n                    workerProcess.send({ workerParams: workerParams, message: \"new child process created with id: \" + workerProcess.pid\n                    });\n\n                }else{\n                    winstonLog.logError(\"Error during creating child Process: \"+workerProcess.error);\n                }\n              }\n        return descriptor;\n          };\n    }       \n\n}"],"sourceRoot":"/source/"}