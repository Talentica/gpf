{"version":3,"sources":["core/decorators/association.ts"],"names":[],"mappings":";AAAA,4BAAyB,cAAc,CAAC,CAAA;AACxC,wBAA4B,UAAU,CAAC,CAAA;AACvC,oCAA8B,+BAA+B,CAAC,CAAA;AAE9D,wBAAwB,mBAAmB,CAAC,CAAA;AAE5C,MAAY,YAAY,WAAM,0BAA0B,CAAC,CAAA;AAEzD,mBAA0B,MAA0B;IAChD,MAAM,CAAC,CAAC,MAAc,EAAE,WAAmB,KAAK,WAAW,CAAC,MAAM,EAAE,WAAW,EAAE,sBAAU,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;AACnH,CAAC;AAFe,iBAAS,YAExB,CAAA;AAED,mBAA0B,MAA0B;IAChD,MAAM,CAAC,CAAC,MAAc,EAAE,WAAmB,KAAK,WAAW,CAAC,MAAM,EAAE,WAAW,EAAE,sBAAU,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;AACnH,CAAC;AAFe,iBAAS,YAExB,CAAA;AAED,oBAA2B,MAA0B;IACjD,MAAM,CAAC,CAAC,MAAc,EAAE,WAAmB,KAAK,WAAW,CAAC,MAAM,EAAE,WAAW,EAAE,sBAAU,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;AACpH,CAAC;AAFe,kBAAU,aAEzB,CAAA;AAED,kBAAyB,MAA0B;IAC/C,MAAM,CAAC,CAAC,MAAc,EAAE,WAAmB,KAAK,WAAW,CAAC,MAAM,EAAE,WAAW,EAAE,sBAAU,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;AAClH,CAAC;AAFe,gBAAQ,WAEvB,CAAA;AAED,qBAAqB,MAAc,EAAE,WAAmB,EAAE,SAAiB,EAAE,MAA0B;IACnG,MAAM,GAAG,MAAM,IAAS,EAAE,CAAC;IAE3B,IAAI,IAAI,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC;IACnC,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,kBAAkB,EAAE,WAAW,EAAE,WAAW,EAAE,MAAM,CAAC,WAAW,IAAI,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAEpH,IAAI,QAAQ,GAAG,YAAY,CAAC,aAAa,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;IAC/D,IAAI,IAAI,GAAG,CAAC,MAAM,IAAI,MAAM,CAAC,QAAQ,CAAC;UAChC,IAAI,mCAAe,CAAC,MAAM,CAAC,QAAQ,EAAE,QAAQ,KAAK,KAAK,CAAC;UACxD,IAAI,mCAAe,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;IAC3C,iBAAS,CAAC,WAAW,CACjB,MAAM,EACN;QACI,SAAS,EAAE,SAAS;QACpB,aAAa,EAAE,qBAAa,CAAC,QAAQ;QACrC,MAAM,EAAE,MAAM;QACd,WAAW,EAAE,WAAW;QACxB,IAAI,EAAE,IAAI;KACb,CAAC,CAAC;AACX,CAAC","file":"core/decorators/association.js","sourcesContent":["import {Decorators} from '../constants';\nimport {DecoratorType} from '../enums';\nimport {ParamTypeCustom} from '../metadata/param-type-custom';\n\nimport {MetaUtils} from \"../metadata/utils\";\nimport {IAssociationParams} from './interfaces/association-params';\nimport * as ReflectUtils from '../reflect/reflect-utils';\n\nexport function onetomany(params: IAssociationParams) {\n    return (target: Object, propertyKey: string) => addMetadata(target, propertyKey, Decorators.ONETOMANY, params);\n}\n\nexport function manytoone(params: IAssociationParams) {\n    return (target: Object, propertyKey: string) => addMetadata(target, propertyKey, Decorators.MANYTOONE, params);\n}\n\nexport function manytomany(params: IAssociationParams) {\n    return (target: Object, propertyKey: string) => addMetadata(target, propertyKey, Decorators.MANYTOMANY, params);\n}\n\nexport function onetoone(params: IAssociationParams) {\n    return (target: Object, propertyKey: string) => addMetadata(target, propertyKey, Decorators.ONETOONE, params);\n}\n\nfunction addMetadata(target: Object, propertyKey: string, decorator: string, params: IAssociationParams) {\n    params = params || <any>{};\n    \n    var name = target.constructor.name;\n    console.log(decorator, ' - propertyKey: ', propertyKey, ', target:', target.constructor && target.constructor.name);\n\n    let itemType = ReflectUtils.getDesignType(target, propertyKey);\n    let type = (params && params.itemType)\n        ? new ParamTypeCustom(params.itemType, itemType === Array)\n        : new ParamTypeCustom(itemType, false);\n    MetaUtils.addMetaData(\n        target,\n        {\n            decorator: decorator,\n            decoratorType: DecoratorType.PROPERTY,\n            params: params,\n            propertyKey: propertyKey,\n            type: type\n        });\n}"],"sourceRoot":"/source/"}