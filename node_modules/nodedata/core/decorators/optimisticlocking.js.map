{"version":3,"sources":["core/decorators/optimisticlocking.ts"],"names":[],"mappings":";AAAA,wBAAwB,mBAAmB,CAAC,CAAA;AAC5C,6BAAyB,yBAAyB,CAAC,CAAA;AACnD,iCAA4B,yBAAyB,CAAC,CAAA;AAEtD,sCAAmC,8BAA8B,CAAC,CAAA;AAElE,2BAAkC,MAAmB;IACjD,MAAM,GAAG,MAAM,IAAS,EAAE,CAAC;IAC3B,MAAM,CAAC,UAAU,MAAc,EAAE,WAAmB;QAChD,IAAI,IAAI,GAAG,MAAM,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC;QACpC,MAAM,CAAA,CAAC,IAAI,CAAC,CAAA,CAAC;YACT,KAAK,wCAAkB,CAAC,OAAO;gBAC9B,iBAAS,CAAC,WAAW,CAAC,MAAM,EAC3B;oBACE,SAAS,EAAE,uBAAU,CAAC,cAAc;oBACpC,aAAa,EAAE,8BAAa,CAAC,QAAQ;oBACrC,MAAM,EAAE,MAAM;oBACd,WAAW,EAAE,WAAW;iBAC1B,CAAC,CAAC;gBACJ,KAAK,CAAC;QACV,CAAC;IACL,CAAC,CAAC;AACN,CAAC;AAhBe,yBAAiB,oBAgBhC,CAAA","file":"core/decorators/optimisticlocking.js","sourcesContent":["import {MetaUtils} from \"../metadata/utils\";\nimport {Decorators} from '../constants/decorators';\nimport {DecoratorType} from '../enums/decorator-type';\nimport {JsonIgnore} from '../enums/jsonignore-enum';\nimport { OptimisticLockType } from \"../enums/optimisticlock-type\";\n\nexport function OptimisticLocking(params?: JsonIgnore): any {\n    params = params || <any>{};\n    return function (target: Object, propertyKey: string) {\n        let type = params && params[\"type\"];\n        switch(type){\n            case OptimisticLockType.VERSION: \n             MetaUtils.addMetaData(target,\n              {\n                decorator: Decorators.OPTIMISTICLOCK,\n                decoratorType: DecoratorType.PROPERTY,\n                params: params,\n                propertyKey: propertyKey\n             });\n            break;\n        }\n    };\n}\n"],"sourceRoot":"/source/"}