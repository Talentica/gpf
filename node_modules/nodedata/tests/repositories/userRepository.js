"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
const decorators_1 = require("../../core/decorators");
const usermodel_1 = require('../models/usermodel');
const dynamic_repository_1 = require('../../core/dynamic/dynamic-repository');
const authorize_1 = require('../../core/decorators/authorize');
const preauthorize_1 = require('../../core/decorators/preauthorize');
var Q = require('q');
let UserRepository = class UserRepository extends dynamic_repository_1.DynamicRepository {
    //@authorize({ roles: ['ROLE_A'] })
    //@preauthorize({ serviceName: "preauthservice", methodName: "CanEditWithParams", params: { id: '#id', entity: '#entity' } })
    findAll() {
        return super.findAll();
    }
    doFindByName() {
    }
    doFindByNameAndAge(name) {
        return Q.when(name);
        //return Q.fcall(this.getCaps(name);
    }
    getCaps(name) {
        return name + '   ' + name;
    }
    doProcess(name, nam, type) {
        return type;
    }
    doProcess1(name) {
        return name;
    }
    findByField(fieldName, value) {
        return super.findByField(fieldName, value);
    }
};
__decorate([
    authorize_1.authorize({ roles: ['ROLE_A'] }),
    preauthorize_1.preauthorize({ serviceName: "preauthservice", methodName: "CanEdit" }), 
    __metadata('design:type', Function), 
    __metadata('design:paramtypes', [String, String, Object]), 
    __metadata('design:returntype', void 0)
], UserRepository.prototype, "doProcess", null);
__decorate([
    preauthorize_1.preauthorize({ serviceName: "preauthservice", methodName: "CanEditWithParams" }), 
    __metadata('design:type', Function), 
    __metadata('design:paramtypes', [Boolean]), 
    __metadata('design:returntype', void 0)
], UserRepository.prototype, "doProcess1", null);
__decorate([
    authorize_1.authorize({ roles: ['ROLE_A'] }), 
    __metadata('design:type', Function), 
    __metadata('design:paramtypes', [Object, Object]), 
    __metadata('design:returntype', Object)
], UserRepository.prototype, "findByField", null);
UserRepository = __decorate([
    decorators_1.repository({ path: 'users', model: usermodel_1.UserModel }), 
    __metadata('design:paramtypes', [])
], UserRepository);
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = UserRepository;

//# sourceMappingURL=userRepository.js.map
