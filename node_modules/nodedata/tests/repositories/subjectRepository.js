"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
const decorators_1 = require("../../core/decorators");
const subject_1 = require('../models/subject');
const dynamic_repository_1 = require('../../core/dynamic/dynamic-repository');
const preauthorize_1 = require('../../core/decorators/preauthorize');
const postfilter_1 = require('../../core/decorators/postfilter');
let CourseRepository = class CourseRepository extends dynamic_repository_1.DynamicRepository {
    //@authorize({ roles: ['ROLE_A'] })
    //@postfilter({ serviceName: "preauthservice", methodName: "PostFilter" })
    findAll() {
        return super.findAll();
    }
    doProcess(id, val) {
        return 'success';
    }
    findByField(fieldName, value) {
        return super.findByField(fieldName, value);
    }
};
__decorate([
    preauthorize_1.preauthorize({ serviceName: "preauthservice", methodName: "CanEdit" }),
    //, params: { id: '#id', entity: '#entity', other: [false] } })
    decorators_1.allowanonymous(), 
    __metadata('design:type', Function), 
    __metadata('design:paramtypes', []), 
    __metadata('design:returntype', Object)
], CourseRepository.prototype, "findAll", null);
__decorate([
    preauthorize_1.preauthorize({ serviceName: "preauthservice", methodName: "CanEdit1" }), 
    __metadata('design:type', Function), 
    __metadata('design:paramtypes', [Object, Object]), 
    __metadata('design:returntype', void 0)
], CourseRepository.prototype, "doProcess", null);
__decorate([
    preauthorize_1.preauthorize({ serviceName: "preauthservice", methodName: "CanEdit1" }),
    postfilter_1.postfilter({ serviceName: "preauthservice", methodName: "PostFilter" }), 
    __metadata('design:type', Function), 
    __metadata('design:paramtypes', [Object, Object]), 
    __metadata('design:returntype', Object)
], CourseRepository.prototype, "findByField", null);
CourseRepository = __decorate([
    decorators_1.repository({ path: 'subject', model: subject_1.subject }), 
    __metadata('design:paramtypes', [])
], CourseRepository);
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = CourseRepository;

//# sourceMappingURL=subjectRepository.js.map
