{"version":3,"sources":["security/auth/user.ts"],"names":[],"mappings":";AACA;IAWI,YAAmB,QAAgB,EAAE,QAAgB,EAAE,IAAS,EAAE,WAAwB,EAAE,MAAe;QACvG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;QACtE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IAC3B,CAAC;IAEM,OAAO,CAAC,QAAgB,EAAE,QAAgB,EAC7C,OAAgB,EAAE,iBAA0B,EAC5C,qBAA8B,EAAE,gBAAyB,EACzD,WAAuB,EAAC,MAAe;QACvC,EAAE,CAAC,CAAC,QAAQ,IAAI,IAAI,IAAI,QAAQ,IAAI,EAAE,IAAI,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC;YACzD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACvB,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;YAC3C,IAAI,CAAC,qBAAqB,GAAG,qBAAqB,CAAC;YACnD,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;YACzC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;YAC/B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACzB,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,MAAM,iDAAiD,CAAC;QAC5D,CAAC;IACL,CAAC;IAED,cAAc;QACV,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;IAC5B,CAAC;;IAED,WAAW;QACP,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;;IAED,SAAS;QACL,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;;IAED,WAAW;QACP,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;;IAED,mBAAmB;QACf,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC;IAClC,CAAC;;IAED,kBAAkB;QACd,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC;IACjC,CAAC;;IAED,uBAAuB;QACnB,MAAM,CAAC,IAAI,CAAC,qBAAqB,CAAC;IACtC,CAAC;;IAED,SAAS;QACL,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;IACxB,CAAC;;IAED,gBAAgB;QACZ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IACzB,CAAC;IAED,aAAa;QACT,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;IAC3B,CAAC;;AACL,CAAC;AAzEY,YAAI,OAyEhB,CAAA","file":"security/auth/user.js","sourcesContent":["import {UserDetails} from './user-details';\nexport class User implements UserDetails {\n    private password: string;\n    private username: string;\n    private authorities: Array<any>;\n    private accountNonExpired: boolean;\n    private accountNonLocked: boolean;\n    private credentialsNonExpired: boolean;\n    private enabled: boolean;\n    private userObject: any;\n    private dbName: string;\n\n    public constructor(username: string, password: string, user: any, authorities?: Array<any>, dbName?: string) {\n        this.setUser(username, password, true, true, true, true, authorities);\n        this.userObject = user;\n    }\n\n    public setUser(username: string, password: string,\n        enabled: boolean, accountNonExpired: boolean,\n        credentialsNonExpired: boolean, accountNonLocked: boolean,\n        authorities: Array<any>,dbName?: string) {\n        if (username != null && username != \"\" && password != null) {\n            this.username = username;\n            this.password = password;\n            this.enabled = enabled;\n            this.accountNonExpired = accountNonExpired;\n            this.credentialsNonExpired = credentialsNonExpired;\n            this.accountNonLocked = accountNonLocked;\n            this.authorities = authorities;\n            this.dbName = dbName;\n        } else {\n            throw \"Cannot pass null or empty values to constructor\";\n        }\n    }\n\n    getAuthorities(): Array<any> {\n        return this.authorities;\n    };\n\n    getPassword(): string {\n        return this.password;\n    };\n\n    getDbName(): string {\n        return this.dbName;\n    };\n\n    getUsername(): string {\n        return this.username;\n    };\n\n    isAccountNonExpired(): boolean {\n        return this.accountNonExpired;\n    };\n\n    isAccountNonLocked(): boolean {\n        return this.accountNonLocked;\n    };\n\n    isCredentialsNonExpired(): boolean {\n        return this.credentialsNonExpired;\n    };\n\n    isEnabled(): boolean {\n        return this.enabled;\n    };\n\n    eraseCredentials() {\n        this.password = null;\n    }\n\n    getUserObject(): any {\n        return this.userObject;\n    };\n}"],"sourceRoot":"/source/"}