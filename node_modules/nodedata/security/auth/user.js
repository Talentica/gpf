"use strict";
class User {
    constructor(username, password, user, authorities, dbName) {
        this.setUser(username, password, true, true, true, true, authorities);
        this.userObject = user;
    }
    setUser(username, password, enabled, accountNonExpired, credentialsNonExpired, accountNonLocked, authorities, dbName) {
        if (username != null && username != "" && password != null) {
            this.username = username;
            this.password = password;
            this.enabled = enabled;
            this.accountNonExpired = accountNonExpired;
            this.credentialsNonExpired = credentialsNonExpired;
            this.accountNonLocked = accountNonLocked;
            this.authorities = authorities;
            this.dbName = dbName;
        }
        else {
            throw "Cannot pass null or empty values to constructor";
        }
    }
    getAuthorities() {
        return this.authorities;
    }
    ;
    getPassword() {
        return this.password;
    }
    ;
    getDbName() {
        return this.dbName;
    }
    ;
    getUsername() {
        return this.username;
    }
    ;
    isAccountNonExpired() {
        return this.accountNonExpired;
    }
    ;
    isAccountNonLocked() {
        return this.accountNonLocked;
    }
    ;
    isCredentialsNonExpired() {
        return this.credentialsNonExpired;
    }
    ;
    isEnabled() {
        return this.enabled;
    }
    ;
    eraseCredentials() {
        this.password = null;
    }
    getUserObject() {
        return this.userObject;
    }
    ;
}
exports.User = User;

//# sourceMappingURL=user.js.map
