{"version":3,"sources":["di/decorators/service.ts"],"names":[],"mappings":";AAAA,qBAAwB,OAAO,CAAC,CAAA;AAChC,wBAAwB,2BAA2B,CAAC,CAAA;AACpD,4BAAyB,sBAAsB,CAAC,CAAA;AAChD,wBAA4B,kBAAkB,CAAC,CAAA;AAG/C,iBAAwB,MAAsD;IAC1E,MAAM,GAAG,MAAM,IAAS,EAAE,CAAC;IAC3B,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC;IAExB,MAAM,CAAC,UAAU,MAAsB;QACnC,cAAS,CAAC,UAAU,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QACrC,MAAM,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC;QAC1B,iBAAS,CAAC,WAAW,CAAC,MAAM,EAAE;YAC1B,SAAS,EAAE,sBAAU,CAAC,OAAO;YAC7B,aAAa,EAAE,qBAAa,CAAC,KAAK;YAClC,MAAM,EAAE,MAAM;SACjB,CAAC,CAAC;IACP,CAAC,CAAC;AACN,CAAC;AAbe,eAAO,UAatB,CAAA","file":"di/decorators/service.js","sourcesContent":["import {Container} from '../di';\nimport {MetaUtils} from '../../core/metadata/utils';\nimport {Decorators} from '../../core/constants';\nimport {DecoratorType} from '../../core/enums';\nimport {ClassType} from '../../core/utils/classtype';\n\nexport function service(params?: { singleton?: boolean, serviceName?: string }) {\n    params = params || <any>{};\n    params.singleton = true;\n\n    return function (target: ClassType<any>) {\n        Container.addService(target, params);\n        params['target'] = target;\n        MetaUtils.addMetaData(target, {\n            decorator: Decorators.SERVICE,\n            decoratorType: DecoratorType.CLASS,\n            params: params\n        });\n    };\n}\n"],"sourceRoot":"/source/"}