{"version":3,"sources":["mongoose/mongoose-model-helper.ts"],"names":[],"mappings":"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","file":"mongoose/mongoose-model-helper.js","sourcesContent":["import Mongoose = require(\"mongoose\");\nimport Q = require('q');\nimport {EntityChange} from '../core/enums/entity-change';\nimport {MetaUtils} from \"../core/metadata/utils\";\nimport * as CoreUtils from \"../core/utils\";\nimport * as Utils from \"./utils\";\nimport {Decorators} from '../core/constants/decorators';\nimport {DecoratorType} from '../core/enums/decorator-type';\nimport {MetaData} from '../core/metadata/metadata';\nimport {IAssociationParams} from '../core/decorators/interfaces';\nimport {IFieldParams, IDocumentParams} from './decorators/interfaces';\nimport {GetRepositoryForName} from '../core/dynamic/dynamic-repository';\nimport {getEntity, getModel} from '../core/dynamic/model-entity';\nimport * as Enumerable from 'linq';\nimport {winstonLog} from '../logging/winstonLog';\nimport * as mongooseModel from './mongoose-model';\n\n/**\n * finds all the parent and update them. It is called when bulk objects are updated\n * @param model\n * @param objs\n */\nexport function updateParent(model: Mongoose.Model<any>, objs: Array<any>) {\n    var allReferencingEntities = CoreUtils.getAllRelationsForTarget(getEntity(model.modelName));\n    var asyncCalls = [];\n    Enumerable.from(allReferencingEntities)\n        .forEach((x: MetaData) => {\n            var param = <IAssociationParams>x.params;\n            if (param.embedded) {\n                var meta = MetaUtils.getMetaData(x.target, Decorators.DOCUMENT);\n                var targetModelMeta = meta[0];\n                var repoName = (<IDocumentParams>targetModelMeta.params).name;\n                var model = Utils.getCurrentDBModel(repoName);\n                asyncCalls.push(updateParentDocument(model, x, objs));\n            }\n        });\n    return Q.allSettled(asyncCalls);\n}\n\n/**\n * This removes all the transient properties.\n * @param model\n * @param obj\n */\nexport function removeTransientProperties(model: Mongoose.Model<any>, obj: any): any {\n    var clonedObj = {};\n    Object.assign(clonedObj, obj);\n    var transientProps = Enumerable.from(MetaUtils.getMetaData(getEntity(model.modelName))).where((ele: MetaData, idx) => {\n        if (ele.decorator === Decorators.TRANSIENT) {\n            return true;\n        }\n        return false;\n    }).forEach(element => {\n        delete clonedObj[element.propertyKey];\n    });\n    return clonedObj;\n}\n\n/**\n * For eagerLoading, finds all the children and add this to the parent object.\n * This function is then recursively called to update all the embedded children.\n * @param model\n * @param val\n * @param force\n */\nexport function embeddedChildren(model: Mongoose.Model<any>, val: any, force: boolean) {\n    if (!model)\n        return;\n\n    var asyncCalls = [];\n    var metas = CoreUtils.getAllRelationsForTargetInternal(getEntity(model.modelName));\n\n    Enumerable.from(metas).forEach(x => {\n        var m: MetaData = x;\n        var param: IAssociationParams = <IAssociationParams>m.params;\n        if (param.embedded)\n            return;\n\n        if (force || param.eagerLoading) {\n            var relModel = Utils.getCurrentDBModel(param.rel);\n            if (m.propertyType.isArray) {\n                if (val[m.propertyKey] && val[m.propertyKey].length > 0) {\n                    asyncCalls.push(mongooseModel.findMany(relModel, val[m.propertyKey])\n                        .then(result => {\n                            var childCalls = [];\n                            var updatedChild = [];\n                            Enumerable.from(result).forEach(res => {\n                                childCalls.push(embeddedChildren(relModel, res, false).then(r => {\n                                    updatedChild.push(r);\n                                }));\n                            });\n                            return Q.all(childCalls).then(r => {\n                                val[m.propertyKey] = updatedChild;\n                            });\n                        }));\n                }\n            }\n            else {\n                if (val[m.propertyKey]) {\n                    asyncCalls.push(mongooseModel.findOne(relModel, val[m.propertyKey])\n                        .then(result => {\n                            return Q.resolve(embeddedChildren(relModel, result, false).then(r => {\n                                val[m.propertyKey] = r;\n                            }));\n                        }).catch(error => {\n                            winstonLog.logError(`Error in embeddedChildren ${error}`);\n                            return Q.reject(error);\n                        }));\n                }\n            }\n        }\n    });\n\n    if (asyncCalls.length == 0)\n        return Q.when(val);\n\n    return Q.allSettled(asyncCalls).then(res => {\n        return val;\n    });\n}\n\n/**\n * It find all children with deleteCascade = true, and delete those children.\n * Recursively, it finds all the relation with deleteCascade = true and delete them.\n * On deleting these objects, it will not update other parent doc because it is expected that these objects should not have any other parent.\n * @param model\n * @param updateObj\n */\nexport function deleteCascade(model: Mongoose.Model<any>, updateObj: any) {\n    var relations = CoreUtils.getAllRelationsForTargetInternal(getEntity(model.modelName));\n    var relationToDelete = Enumerable.from(relations).where(x => x.params.deleteCascade).toArray();\n    var ids = {};\n    var models = {};\n\n    relationToDelete.forEach(res => {\n        var x = <IAssociationParams>res.params;\n        var prop = updateObj[res.propertyKey];\n        if(!prop)\n            return;\n        ids[x.rel] = ids[x.rel] || [];\n        if (x.embedded) {\n            if (res.propertyType.isArray) {\n                var id = Enumerable.from(prop).select(x => x['_id']).toArray();\n                ids[x.rel] = ids[x.rel].concat(id);\n            }\n            else {\n                ids[x.rel] = ids[x.rel].concat([prop['_id']]);\n            }\n        }\n        else {\n            ids[x.rel] = ids[x.rel].concat(res.propertyType.isArray ? prop : [prop]);\n        }\n        ids[x.rel] = Enumerable.from(ids[x.rel]).select(x => x.toString()).toArray();\n    });\n\n    var asyncCalls = [];\n    for (var i in ids) {\n        if (ids[i].length > 0) {\n            models[i] = Utils.getCurrentDBModel(i);\n            asyncCalls.push(bulkDelete(models[i], ids[i]));\n        }\n    }\n\n    return Q.allSettled(asyncCalls);\n}\n\n/**\n * Autogenerate mongodb guid (ObjectId) for the autogenerated fields in the object\n * @param obj\n * throws TypeError if field type is not String, ObjectId or Object\n */\nexport function autogenerateIdsForAutoFields(model: Mongoose.Model<any>, obj: any): void {\n    var fieldMetaArr = MetaUtils.getMetaData(getEntity(model.modelName), Decorators.FIELD);\n    if (!fieldMetaArr) {\n        return;\n    }\n    Enumerable.from(fieldMetaArr)\n        .where((keyVal) => keyVal && keyVal.params && (<IFieldParams>keyVal.params).autogenerated)\n        .forEach((keyVal) => {\n            var metaData = <MetaData>keyVal;\n            var objectId = new Mongoose.Types.ObjectId();\n            if (metaData.getType() === String) {\n                obj[metaData.propertyKey] = objectId.toHexString();\n            } else if (metaData.getType() === Mongoose.Types.ObjectId || metaData.getType() === Object) {\n                obj[metaData.propertyKey] = objectId;\n            } else {\n                winstonLog.logError(model.modelName + ': ' + metaData.propertyKey + ' - ' + 'Invalid autogenerated type');\n                throw TypeError(model.modelName + ': ' + metaData.propertyKey + ' - ' + 'Invalid autogenerated type');\n            }\n        });\n}\n\n/**\n * It find all the parent document and then update them. This updation will only happen if that property have chaged\n * @param model\n * @param entityChange\n * @param obj\n * @param changedProps\n */\nexport function updateEmbeddedOnEntityChange(model: Mongoose.Model<any>, entityChange: EntityChange, obj: any, changedProps: Array<string>) {\n    var allReferencingEntities = CoreUtils.getAllRelationsForTarget(getEntity(model.modelName));\n    var asyncCalls = [];\n    Enumerable.from(allReferencingEntities)\n        .forEach((x: MetaData) => {\n            var param = <IAssociationParams>x.params;\n            if (entityChange == EntityChange.delete || Utils.isPropertyUpdateRequired(changedProps, param.properties)) {\n                var newObj = getFilteredValue(obj, param.properties);\n                asyncCalls.push(updateEntity(x.target, x.propertyKey, x.propertyType.isArray, newObj, param.embedded, entityChange));\n            }\n        });\n    return Q.allSettled(asyncCalls);\n}\n\n/**\n * Add child model only if relational property have set embedded to true\n * @param model\n * @param obj\n */\nexport function addChildModelToParent(model: Mongoose.Model<any>, obj: any, id: any) {\n    var asyncCalls = [];\n    var metaArr = CoreUtils.getAllRelationsForTargetInternal(getEntity(model.modelName));\n    for (var m in metaArr) {\n        var meta: MetaData = <any>metaArr[m];\n        if (obj[meta.propertyKey]) {\n            asyncCalls.push(embedChild(obj, meta.propertyKey, meta));\n        }\n    }\n\n    return Q.allSettled(asyncCalls).then(x => {\n        return obj;\n        //return isDataValid(model, obj, id).then(x => {\n        //    return obj;\n        //});\n    });\n}\n\n/**\n * current implemnetation only update embeded for one level parent-child relationship\n * e.g- only supports teacher and student relation ship not principle->teacher->student embeded object  \n * @param model\n * @param meta\n * @param objs\n */\nfunction updateParentDocument(model: Mongoose.Model<any>, meta: MetaData, objs: Array<any>) {\n    var queryCond = {};\n    var ids = Enumerable.from(objs).select(x => x['_id']).toArray();\n    queryCond[meta.propertyKey + '._id'] = { $in: ids };\n    return Q.nbind(model.find, model)(queryCond, { '_id': 1 }).then((result: Array<any>) => {\n        if (!result) {\n            return Q.resolve([]);\n        }\n        if (result && !result.length) {\n            return Q.resolve(result);\n        }\n        var parents: Array<any> = Utils.toObject(result);\n        var parentIds = parents.map(x => x._id);\n        var bulk = model.collection.initializeUnorderedBulkOp();\n        // classic for loop used gives high performanance\n        for (var i = 0; i < objs.length; i++) {\n            var queryFindCond = {};\n            var updateSet = {};\n            var objectId = Utils.castToMongooseType(objs[i]._id, Mongoose.Types.ObjectId);\n            queryFindCond['_id'] = { $in: parentIds };\n            queryFindCond[meta.propertyKey + '._id'] = objectId;\n            let updateMongoOperator = Utils.getMongoUpdatOperatorForRelation(meta);\n            updateSet[meta.propertyKey + updateMongoOperator] = objs[i];\n            bulk.find(queryFindCond).update({ $set: updateSet });\n        }\n\n        return Q.nbind(bulk.execute, bulk)().then(result => {\n           return  mongooseModel.findMany(model, parentIds).then(objects => {\n                return updateParent(model, objects).then(res => {\n                    return objects;\n                });\n            });\n        })\n    })\n        .catch(error => {\n            winstonLog.logError(`Error in updateParentDocument ${error}`);\n            return Q.reject(error);\n        });\n}\n\nfunction updateParentDocumentOld(model: Mongoose.Model<any>, meta: MetaData, objs: Array<any>) {\n    var queryCond = {};\n    var ids = Enumerable.from(objs).select(x => x['_id']).toArray();\n    var strIds = ids.map(x => x.toString());\n    queryCond[meta.propertyKey + '._id'] = { $in: ids };\n    return Q.nbind(model.find, model)(queryCond)\n        .then(result => {\n            {\n                var asyncCall = [];\n                Enumerable.from(result).forEach(doc => {\n                    var newUpdate = {};\n                    var values = doc[meta.propertyKey];\n                    if (meta.propertyType.isArray) {\n                        var res = [];\n                        values.forEach(x => {\n                            var index = strIds.indexOf(x['_id'].toString());\n                            if (index >= 0) {\n                                res.push(objs[index]);\n                            }\n                            else {\n                                res.push(x);\n                            }\n                        });\n                        newUpdate[meta.propertyKey] = res;\n                    }\n                    else {\n                        var index = strIds.indexOf(values['_id'].toString());\n                        newUpdate[meta.propertyKey] = objs[index];\n                    }\n                    asyncCall.push(mongooseModel.put(model, doc['_id'], newUpdate));\n                });\n                return Q.allSettled(asyncCall);\n            }\n        });\n}\n\nfunction bulkDelete(model: Mongoose.Model<any>, ids: any) {\n    return mongooseModel.findMany(model, ids).then(data => {\n        return Q.nbind(model.remove, model)({\n            '_id': {\n                $in: ids\n            }\n        }).then(x => {\n            var asyncCalls = [];\n            // will not call update embedded parent because these children should not exist without parent\n            Enumerable.from(data).forEach(res => {\n                asyncCalls.push(deleteCascade(model, res));\n            });\n\n            return Q.allSettled(asyncCalls);\n        });\n    });\n}\n\nfunction patchAllEmbedded(model: Mongoose.Model<any>, prop: string, updateObj: any, entityChange: EntityChange, isEmbedded: boolean, isArray?: boolean): Q.Promise<any> {\n    if (isEmbedded) {\n\n        var queryCond = {};\n        queryCond[prop + '._id'] = updateObj['_id'];\n\n        if (entityChange === EntityChange.put\n            || entityChange === EntityChange.patch\n            || (entityChange === EntityChange.delete && !isArray)) {\n\n            var cond = {};\n            cond[prop + '._id'] = updateObj['_id'];\n\n            var newUpdateObj = {};\n            isArray\n                ? newUpdateObj[prop + '.$'] = updateObj\n                : newUpdateObj[prop] = entityChange === EntityChange.delete ? null : updateObj;\n\n            return Q.nbind(model.update, model)(cond, { $set: newUpdateObj }, { multi: true })\n                .then(result => {\n                    return updateEmbeddedParent(model, queryCond, result, prop);\n                }).catch(error => {\n                    winstonLog.logError(`Error in patchAllEmbedded ${error}`);\n                    return Q.reject(error);\n                });\n\n        }\n        else {\n            var pullObj = {};\n            pullObj[prop] = {};\n            pullObj[prop]['_id'] = updateObj['_id'];\n\n            return Q.nbind(model.update, model)({}, { $pull: pullObj }, { multi: true })\n                .then(result => {\n                    return updateEmbeddedParent(model, queryCond, result, prop);\n                }).catch(error => {\n                    winstonLog.logError(`Error in patchAllEmbedded ${error}`);\n                    return Q.reject(error);\n                });\n        }\n    }\n    else {\n        // this to handle foreign key deletion only\n        if (entityChange == EntityChange.delete) {\n            var queryCond = {};\n            if (isArray) {\n                queryCond[prop] = { $in: [updateObj['_id']] };\n            }\n            else {\n                queryCond[prop] = updateObj['_id'];\n            }\n\n            var pullObj = {};\n            pullObj[prop] = {};\n\n            if (isArray) {\n                pullObj[prop] = updateObj['_id'];\n                return Q.nbind(model.update, model)({}, { $pull: pullObj }, { multi: true })\n                    .then(result => {\n                        return updateEmbeddedParent(model, queryCond, result, prop);\n                    }).catch(error => {\n                        winstonLog.logError(`Error in patchAllEmbedded ${error}`);\n                        return Q.reject(error);\n                    });\n            }\n            else {\n                pullObj[prop] = null;\n                var cond = {};\n                cond[prop] = updateObj['_id'];\n\n                return Q.nbind(model.update, model)(cond, { $set: pullObj }, { multi: true })\n                    .then(result => {\n                        //console.log(result);\n                        return updateEmbeddedParent(model, queryCond, result, prop);\n                    }).catch(error => {\n                        winstonLog.logError(`Error in patchAllEmbedded ${error}`);\n                        return Q.reject(error);\n                    });\n            }\n        }\n    }\n}\n\nfunction updateEmbeddedParent(model: Mongoose.Model<any>, queryCond, result, property: string) {\n    if (result['nModified'] == 0)\n        return;\n\n    var allReferencingEntities = CoreUtils.getAllRelationsForTarget(getEntity(model.modelName));\n\n    var first = Enumerable.from(allReferencingEntities).where(x => (<IAssociationParams>x.params).embedded).firstOrDefault();\n    if (!first)\n        return;\n\n    winstonLog.logInfo(`updateEmbeddedParent query is ${queryCond}`);\n    // find the objects and then update these objects\n    return Q.nbind(model.find, model)(queryCond)\n        .then(updated => {\n\n            // Now update affected documents in embedded records\n            var asyncCalls = [];\n            Enumerable.from(updated).forEach(x => {\n                asyncCalls.push(updateEmbeddedOnEntityChange(model, EntityChange.patch, x, [property]));\n            });\n            return Q.all(asyncCalls);\n\n        }).catch(error => {\n            winstonLog.logError(`Error in updateEmbeddedParent ${error}`);\n            return Q.reject(error);\n        });\n}\n\nfunction isDataValid(model: Mongoose.Model<any>, val: any, id: any) {\n    var asyncCalls = [];\n    var ret: boolean = true;\n    var metas = CoreUtils.getAllRelationsForTargetInternal(getEntity(model.modelName));\n    Enumerable.from(metas).forEach(x => {\n        var m: MetaData = x;\n        if (val[m.propertyKey]) {\n            asyncCalls.push(isRelationPropertyValid(model, m, val[m.propertyKey], id).then(res => {\n                if (res != undefined && !res) {\n                    let error:any = new Error();\n                    error.propertyKey = m.propertyKey;\n                    throw error;\n                }\n            }));\n        }\n    });\n    return Q.all(asyncCalls).catch(f => {\n        let errorMessage='Invalid value. Adding to property '+ \"'\"+ f.propertyKey+ \"'\"+ ' will break the relation in model: '+ model.modelName;\n            winstonLog.logError(errorMessage);\n            throw errorMessage;\n    });\n}\n\nfunction isRelationPropertyValid(model: Mongoose.Model<any>, metadata: MetaData, val: any, id: any) {\n    switch (metadata.decorator) {\n        case Decorators.ONETOMANY: // for array of objects\n            if (metadata.propertyType.isArray) {\n                if (Array.isArray(val) && val.length > 0) {\n                    var queryCond = [];\n                    var params = <IAssociationParams>metadata.params;\n                    Enumerable.from(val).forEach(x => {\n                        var con = {};\n                        if (params.embedded) {\n                            con[metadata.propertyKey + '._id'] = x['_id'];\n                        }\n                        else {\n                            con[metadata.propertyKey] = { $in: [x] };\n                        }\n                        queryCond.push(con);\n                    });\n                    return Q.nbind(model.find, model)(getQueryCondition(id, queryCond))\n                        .then(result => {\n                            if (Array.isArray(result) && result.length > 0)\n                                return false;\n                            else\n                                return true;\n                        }).catch(error => {\n                            winstonLog.logError(`Error in isRelationPropertyValid ${error}`);\n                            return Q.reject(error);\n                        });\n                }\n            }\n            break;\n        case Decorators.ONETOONE: // for single object\n            if (!metadata.propertyType.isArray) {\n                if (!Array.isArray(val)) {\n                    var queryCond = [];\n                    var con = {};\n                    var params = <IAssociationParams>metadata.params;\n                    if (params.embedded) {\n                        con[metadata.propertyKey + '._id'] = val['_id'];\n                    }\n                    else {\n                        con[metadata.propertyKey] = { $in: [val] };\n                    }\n                    queryCond.push(con);\n\n                    return Q.nbind(model.find, model)(getQueryCondition(id, queryCond))\n                        .then(result => {\n                            if (Array.isArray(result) && result.length > 0) {\n                                return false;\n                            }\n                        }).catch(error => {\n                            winstonLog.logError(`Error in isRelationPropertyValid ${error}`);\n                            return Q.reject(error);\n                        });\n                }\n            }\n            break;\n        case Decorators.MANYTOONE: // for single object\n            // do nothing\n            return Q.when(true);\n        case Decorators.MANYTOMANY: // for array of objects\n            // do nothing\n            return Q.when(true);\n    }\n    return Q.when(true);\n}\n\nfunction getQueryCondition(id: any, cond: any): any {\n    if (id) {\n        return {\n            $and: [\n                { $or: cond },\n                { '_id': { $ne: id } }\n            ]\n        };\n    }\n    else {\n        return { $or: cond }\n    }\n}\n\nfunction updateEntity(targetModel: Object, propKey: string, targetPropArray: boolean, updatedObject: any, embedded: boolean, entityChange: EntityChange): Q.Promise<any> {\n    var meta = MetaUtils.getMetaData(targetModel, Decorators.DOCUMENT);\n\n    if (!meta) {\n        throw 'Could not fetch metadata for target object';\n    }\n\n    var targetModelMeta = meta[0];\n    var repoName = (<IDocumentParams>targetModelMeta.params).name;\n    var model = Utils.getCurrentDBModel(repoName);\n    if (!model) {\n        winstonLog.logError('no repository found for relation');\n        throw 'no repository found for relation';\n    }\n    return patchAllEmbedded(model, propKey, updatedObject, entityChange, embedded, targetPropArray);\n}\n\nexport function fetchEagerLoadingProperties(model: Mongoose.Model<any>, val: any): Q.Promise<any> {\n    var asyncCalls = [];\n    var metas = CoreUtils.getAllRelationsForTargetInternal(getEntity(model.modelName));\n\n    Enumerable.from(metas).forEach(x => {\n        var m: MetaData = x;\n        var param: IAssociationParams = <IAssociationParams>m.params;\n        if (param && !param.embedded && param.eagerLoading && val[m.propertyKey]) {\n            var relModel = Utils.getCurrentDBModel(param.rel);\n            if (m.propertyType.isArray) {\n                if (val[m.propertyKey].length > 0) {\n                    asyncCalls.push(mongooseModel.findMany(relModel, val[m.propertyKey]).then(res => {\n                        val[m.propertyKey] = res;\n                    }));\n                }\n            }\n            else {\n                asyncCalls.push(mongooseModel.findMany(relModel, [val[m.propertyKey]]).then(res => {\n                    val[m.propertyKey] = res[0];\n                }));\n            }\n        }\n    });\n\n    return Q.allSettled(asyncCalls).then(result => {\n        return val;\n    });\n}\n\nfunction embedChild(obj, prop, relMetadata: MetaData): Q.Promise<any> {\n    if (!obj[prop])\n        return;\n    if (relMetadata.propertyType.isArray && !(obj[prop] instanceof Array)) {\n        winstonLog.logError('Expected array, found non-array');\n        throw 'Expected array, found non-array';\n    }\n    if (!relMetadata.propertyType.isArray && (obj[prop] instanceof Array)) {\n        winstonLog.logError('Expected single item, found array');\n        throw 'Expected single item, found array';\n    }\n    var createNewObj = [];\n    var params: IAssociationParams = <any>relMetadata.params;\n    var relModel = Utils.getCurrentDBModel(params.rel);\n    var val = obj[prop];\n    var newVal = val;\n    var asyncTask = [];\n    if (relMetadata.propertyType.isArray) {\n        newVal = [];\n        var objs = [];\n        var searchObj = [];\n        for (var i in val) {\n            if (CoreUtils.isJSON(val[i])) {\n                if (val[i]['_id']) {\n                    val[i]['_id'] = Utils.castToMongooseType(val[i]['_id'], Mongoose.Types.ObjectId);\n                    if (params.embedded) {\n                        newVal.push(val[i]);\n                    }\n                    else {\n                        newVal.push(val[i]['_id']);\n                    }\n                }\n                else {\n                    objs.push(val[i]);\n                }\n            }\n            else {\n                if (!params.embedded) {\n                    newVal.push(Utils.castToMongooseType(val[i], Mongoose.Types.ObjectId));\n                }\n                else {\n                    searchObj.push(val[i]);\n                }\n            }\n        }\n        if (objs.length > 0) {\n            asyncTask.push(mongooseModel.bulkPost(relModel, objs).then(result => {\n                if (params.embedded) {\n                    newVal = newVal.concat(result);\n                }\n                else {\n                    newVal = newVal.concat(Enumerable.from(result).select(x => x['_id']).toArray());\n                }\n            }));\n        }\n\n        if (searchObj.length > 0) {\n            asyncTask.push(mongooseModel.findMany(relModel, searchObj).then(res => {\n                newVal = newVal.concat(res);\n            }));\n        }\n    }\n    else {\n        if (CoreUtils.isJSON(val)) {\n            if (val['_id']) {\n                if (params.embedded) {\n                    val['_id'] = Utils.castToMongooseType(val['_id'], Mongoose.Types.ObjectId);\n                    newVal = val;\n                }\n                else {\n                    newVal = Utils.castToMongooseType(val['_id'], Mongoose.Types.ObjectId);\n                }\n            }\n            else {\n                asyncTask.push(mongooseModel.post(relModel, val).then(res => {\n                    if (params.embedded) {\n                        newVal = res;\n                    }\n                    else {\n                        newVal = res['_id'];\n                    }\n                }));\n            }\n        }\n        else {\n            if (!params.embedded) {\n                newVal = Utils.castToMongooseType(val, Mongoose.Types.ObjectId);\n            }\n            else {\n                asyncTask.push(mongooseModel.findMany(relModel, [val]).then(res => {\n                    newVal = res[0];\n                }));\n            }\n        }\n    }\n\n    return Q.allSettled(asyncTask).then(res => {\n        obj[prop] = newVal;\n    });\n}\n\nfunction getFilteredValues(values: [any], properties: [string]) {\n    var result = [];\n    values.forEach(x => {\n        var val = getFilteredValue(x, properties);\n        if (val) {\n            result.push(val);\n        }\n    });\n    return result;\n}\n\nfunction getFilteredValue(value, properties: [string]) {\n    if (properties && properties.length > 0) {\n        var json = {};\n        if (value['_id']) {\n            json['_id'] = value['_id'];\n        }\n        properties.forEach(x => {\n            if (value[x])\n                json[x] = value[x];\n        });\n        if (JSON.stringify(json) == '{}') {\n            return null;\n        }\n        return json;\n    }\n    else {\n        return value;\n    }\n}\n\nfunction castAndGetPrimaryKeys(obj, prop, relMetaData: MetaData): Array<any> {\n    var primaryMetaDataForRelation = CoreUtils.getPrimaryKeyMetadata(relMetaData.target);\n\n    if (!primaryMetaDataForRelation) {\n        winstonLog.logError('primary key not found for relation');\n        throw 'primary key not found for relation';\n    }\n\n    var primaryType = primaryMetaDataForRelation.getType();\n    return obj[prop] instanceof Array\n        ? Enumerable.from(obj[prop]).select(x => Utils.castToMongooseType(x, primaryType)).toArray()\n        : [Utils.castToMongooseType(obj[prop], primaryType)];\n}\n\n"],"sourceRoot":"/source/"}