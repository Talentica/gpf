{"version":3,"sources":["mongoose/utils/index.ts"],"names":[],"mappings":"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","file":"mongoose/utils/index.js","sourcesContent":["import Mongoose = require('mongoose');\nimport {EntityChange} from '../../core/enums/entity-change';\nimport * as CoreUtils from '../../core/utils';\nimport {PrincipalContext} from '../../security/auth/principalContext';\nimport * as Enumerable from 'linq';\nimport {getDbSpecifcModel} from '../db';\nimport {pathRepoMap, getModel, getSchema} from '../../core/dynamic/model-entity';\nimport {MetaData} from '../../core/metadata/metadata';\nimport {Decorators} from '../../core/constants/decorators';\nimport {Types} from \"mongoose\";\n\nexport function castToMongooseType(value, schemaType) {\n    var newVal;\n    switch (schemaType) {\n        case Mongoose.Types.ObjectId:\n            if (value instanceof Mongoose.Types.ObjectId) {\n                newVal = value;\n            } else if (typeof value === 'string') {\n                newVal = new Mongoose.Types.ObjectId(value);\n            } else {\n                throw 'cannot cast to primary key type';\n            }\n            break;\n        case String:\n            if (typeof value === 'string') {\n                newVal = value;\n            }\n            newVal = value.toString();\n            break;\n        case Number:\n            if (typeof value === 'number') {\n                newVal = value;\n            }\n            newVal = parseInt(value);\n            if (isNaN(newVal)) {\n                throw 'cannot cast to primary key type';\n            }\n            break;\n        default: newVal = value; break;\n    }\n    return newVal;\n}\n\nexport function getPropertiesFromObject(changedObj: any): Array<string> {\n    return Enumerable.from(changedObj).select((x: any) => x.key).toArray();\n}\n\n/**\n * return json from mongoose object\n * @param result\n */\nexport function toObject(result): any {\n    if (result instanceof Array) {\n        return Enumerable.from(result).select((x:any) => x.toObject()).toArray();\n    }\n    return result ? result.toObject() : null;\n}\n\n/**\n * It creates list of properties to set/unset/push.\n * If array is passed, then for put whole array is replaced but for patch array is updated. For e.g.\n * Case 'put': Suppose there is an object {'ids':['1']}. On put {'ids':['2']}, it will result {'ids':['2']}.\n * Case 'patch': Suppose there is an object {'ids':['1']}. On patch {'ids':['2']}, it will result {'ids':['1', '2']}.\n * @param obj\n * @param type\n */\nexport function getUpdatedProps(obj: any, type: EntityChange) {\n    var push = {};\n    var set = {};\n    var unset = {};\n    var s = false, u = false, p = false;\n    for (var i in obj) {\n        if (obj[i] == undefined || obj[i] == null || obj[i] == undefined && obj[i] == '' || (obj[i] instanceof Array && obj[i] == []) || obj[i] == {}) {\n            unset[i] = obj[i];\n            u = true;\n        }\n        else {\n            if (type == EntityChange.patch && obj[i] instanceof Array) {\n                push[i] = {\n                    $each: obj[i]\n                }\n                p = true;\n            }\n            else {\n                set[i] = obj[i];\n                s = true;\n            }\n        }\n    }\n\n    var json = {};\n    if (s) {\n        json['$set'] = set;\n    }\n    if (u) {\n        json['$unset'] = unset;\n    }\n    if (p) {\n        json['$push'] = push;\n    }\n\n    return json;\n}\n\nexport function isPropertyUpdateRequired(changedProps: Array<string>, properties: [string]) {\n    if (properties && properties.length > 0) {\n        if (Enumerable.from(properties).any(x => changedProps.indexOf(x) > -1))\n            return true;\n    }\n\n    if (!changedProps || changedProps.length == 0)\n        return false;\n    else if (!properties || properties.length == 0)\n        return true;\n    else {\n        if (Enumerable.from(properties).any(x => changedProps.indexOf(x) > -1))\n            return true;\n        else\n            return false;\n    }\n}\n\nexport function getCurrentDBModel(schemaName) {\n    var model = getModel(schemaName);\n    return getDbSpecifcModel(schemaName, model.schema);\n}\n\nexport function getMongoUpdatOperatorForRelation(meta: MetaData) {\n    var operator = \"\";\n    switch (meta.decorator) {\n        case Decorators.ONETOMANY: // for array of objects\n            operator = '.$';\n            break;\n        case Decorators.MANYTOMANY: // for array of objects\n            operator = '.$';\n            break;\n        case Decorators.MANYTOONE: // for single object\n            operator = \"\";\n            break;\n        case Decorators.ONETOONE: // for single object\n            operator = \"\";\n            break;\n    }\n\n    return operator;\n\n}\n\nexport function isBasonOrStringType(obj: any) {\n    if (!obj) {\n        return undefined;\n    }\n    return obj instanceof Types.ObjectId || typeof obj === \"string\";\n}"],"sourceRoot":"/source/"}