{"version":3,"sources":["search/elasticSearchUtils.ts"],"names":[],"mappings":";AAAA,IAAI,YAAY,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;AAC3C,IAAI,aAAa,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;AAE7C,yBAAqB,WAAW,CAAC,CAAA;AAEjC;;GAEG;AACH;IAEI;QACI,EAAE,CAAC,CAAC,eAAM,CAAC,kBAAkB,CAAC,CAAC,CAAC;YAC5B,IAAI,CAAC,QAAQ,GAAG,IAAI,aAAa,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,eAAM,CAAC,uBAAuB,EAAE,CAAC,CAAC;QACvF,CAAC;IACL,CAAC;IAED,0BAA0B,CAAC,MAAW;QAClC,EAAE,CAAC,CAAC,eAAM,CAAC,kBAAkB,CAAC,CAAC,CAAC;YAC5B,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE;gBACxB,QAAQ,EAAE,IAAI,CAAC,QAAQ;aAC1B,CAAC,CAAC;QACP,CAAC;IACL,CAAC;IAED,sBAAsB,CAAC,aAAkB;QACrC,sGAAsG;QACtG,EAAE,CAAC,CAAC,eAAM,CAAC,kBAAkB,IAAI,aAAa,CAAC,aAAa,CAAC,CAAC,CAAC;YAC3D,aAAa,CAAC,aAAa,CAAC,CAAC,GAAQ,EAAE,OAAY;gBAC/C,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oBACN,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACvB,CAAC;gBACD,IAAI,CAAC,CAAC;oBACF,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;gBACzB,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC;IACL,CAAC;AACL,CAAC;AAEU,mBAAW,GAAG,IAAI,mBAAmB,EAAE,CAAC","file":"search/elasticSearchUtils.js","sourcesContent":["var mongoosastic = require(\"mongoosastic\");\nvar elasticsearch = require(\"elasticsearch\");\n\nimport {Config} from \"../config\"; \n\n/**\n * ElastticSearchUtils\n */\nclass ElastticSearchUtils {\n    private esClient: any;\n    constructor() {\n        if (Config.ApplyElasticSearch) {\n            this.esClient = new elasticsearch.Client({ host: Config.ElasticSearchConnection });\n        }\n    }\n\n    insertMongoosasticToSchema(schema: any) {\n        if (Config.ApplyElasticSearch) {\n            schema.plugin(mongoosastic, {\n                esClient: this.esClient\n            });\n        }\n    }\n\n    registerToMongoosastic(mongooseModel: any) {\n        // This will be called only in the case if the mongoosastic plugin was attached to the mongoose model.\n        if (Config.ApplyElasticSearch && mongooseModel.createMapping) {\n            mongooseModel.createMapping((err: any, mapping: any) => {\n                if (err) {\n                    console.error(err);\n                }\n                else {\n                    console.log(mapping);\n                }\n            });\n        }\n    }\n}\n\nexport var searchUtils = new ElastticSearchUtils();"],"sourceRoot":"/source/"}