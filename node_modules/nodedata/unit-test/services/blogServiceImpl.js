"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
const Q = require('q');
const workerAssociation_1 = require('../../core/decorators/workerAssociation');
const service_1 = require('../../di/decorators/service');
const fs = require('fs');
const principalContext_1 = require('../../security/auth/principalContext');
let blogServiceImpl = class blogServiceImpl {
    ///blogRepo= new BlogRepository();
    //@Worker({name: 'workerThread', workerParams:{workerName:'', serviceName:'' ,servicemethodName:'', arguments:["john"]}})
    checkApplicationContext(fileName) {
        var blog;
        console.log("Value returned...... ******** .......");
        console.log("Appliation Context Value...... ******** ......." +
            JSON.stringify(principalContext_1.PrincipalContext.getSession()));
        var argument = principalContext_1.PrincipalContext.getSession().get('workerParams').arguments;
        console.log("Value in principal context: " + argument);
        return Q.nbind(fs.writeFile, fs)(fileName, argument).then(ret => {
            return ret;
        });
        // return this.blogRepo.findByField("name", value).then((blog) => {
        //     return blog.name;
        // });
    }
    ;
    // @Worker({name: 'workerThread'})
    //  @Worker({name: 'workerThread', workerParams:{workerName:'', serviceName:'' ,servicemethodName:'',
    //  arguments:["unit-test/OutputFiles/file.txt","Hello"]}})
    writeBlog(fileName, data) {
        var blog;
        console.log("file name:" + fileName + " and data: " + data);
        console.log("Value returned...... ******** .......");
        return Q.nbind(fs.writeFile, fs)(fileName, data).then(ret => {
            console.log('file writing error' + ret);
            return ret;
        });
    }
    ;
};
__decorate([
    workerAssociation_1.Worker({ name: 'workerThread' }), 
    __metadata('design:type', Function), 
    __metadata('design:paramtypes', [Object]), 
    __metadata('design:returntype', Object)
], blogServiceImpl.prototype, "checkApplicationContext", null);
__decorate([
    workerAssociation_1.Worker(), 
    __metadata('design:type', Function), 
    __metadata('design:paramtypes', [Object, Object]), 
    __metadata('design:returntype', Object)
], blogServiceImpl.prototype, "writeBlog", null);
blogServiceImpl = __decorate([
    service_1.service({ 'singleton': true, 'serviceName': 'blogService' }), 
    __metadata('design:paramtypes', [])
], blogServiceImpl);
exports.blogServiceImpl = blogServiceImpl;
//# sourceMappingURL=blogServiceImpl.js.map