{"version":3,"sources":["sequelizeimp/decorators/column.ts"],"names":[],"mappings":";AAAA,wBAAwB,2BAA2B,CAAC,CAAA;AACpD,iCAA4B,iCAAiC,CAAC,CAAA;AAC9D,4BAAyB,cAAc,CAAC,CAAA;AAGxC,gBAAuB,MAGtB;IACG,MAAM,CAAC,UAAU,MAAc,EAAE,WAAmB;QAChD,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAE,WAAW,EAAE,WAAW,EAAE,MAAM,CAAC,CAAC;QACvE,iBAAS,CAAC,WAAW,CAAC,MAAM,EACxB;YACI,SAAS,EAAE,sBAAU,CAAC,MAAM;YAC5B,aAAa,EAAE,8BAAa,CAAC,QAAQ;YACrC,MAAM,EAAE,MAAM;YACd,WAAW,EAAE,WAAW;SAC3B,CAAC,CAAC;IACX,CAAC,CAAA;AACL,CAAC;AAde,cAAM,SAcrB,CAAA","file":"sequelizeimp/decorators/column.js","sourcesContent":["import {MetaUtils} from \"../../core/metadata/utils\";\nimport {DecoratorType} from '../../core/enums/decorator-type';\nimport {Decorators} from '../constants';\nimport * as Sequelize from \"sequelize\";\n\nexport function column(params?: {name:string,\n    type?: any, allowNull?: boolean,\n    primaryKey?:boolean,unique?:boolean,validate?:any, autogenerated?: boolean, searchIndex?: boolean,autoIncrement? : boolean\n}) {\n    return function (target: Object, propertyKey: string) {\n        console.log('field - propertyKey: ', propertyKey, ', target:', target);\n        MetaUtils.addMetaData(target,\n            {\n                decorator: Decorators.COLUMN,\n                decoratorType: DecoratorType.PROPERTY,\n                params: params,\n                propertyKey: propertyKey\n            });\n    }\n}"],"sourceRoot":"/source/"}