{"version":3,"sources":["sequelizeimp/utils/index.ts"],"names":[],"mappings":";AAEA,6BAAoC,KAAK,EAAE,UAAU;IACjD,IAAI,MAAM,CAAC;IACX,MAAM,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;QACjB,sBAAsB;QACtB,4CAA4C;QAC5C,yBAAyB;QACzB,6CAA6C;QAC7C,6CAA6C;QAC7C,cAAc;QACd,kDAAkD;QAClD,OAAO;QACP,YAAY;QACZ,KAAK,MAAM;YACP,EAAE,CAAC,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC;gBAC5B,MAAM,GAAG,KAAK,CAAC;YACnB,CAAC;YACD,MAAM,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;YAC1B,KAAK,CAAC;QACV,KAAK,MAAM;YACP,EAAE,CAAC,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC;gBAC5B,MAAM,GAAG,KAAK,CAAC;YACnB,CAAC;YACD,MAAM,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;YACzB,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBAChB,MAAM,iCAAiC,CAAC;YAC5C,CAAC;YACD,KAAK,CAAC;QACV;YAAS,MAAM,GAAG,KAAK,CAAC;YAAC,KAAK,CAAC;IACnC,CAAC;IACD,MAAM,CAAC,MAAM,CAAC;AAClB,CAAC;AA9Be,2BAAmB,sBA8BlC,CAAA","file":"sequelizeimp/utils/index.js","sourcesContent":["import * as Sequelize from \"sequelize\";\n\nexport function castToSequelizeType(value, schemaType) {\n    var newVal;\n    switch (schemaType) {\n        //case Sequelize.UUID:\n        //    if (value instanceof Sequelize.UUID) {\n        //        newVal = value;\n        //    } else if (typeof value === 'string') {\n        //        newVal = new Sequelize.UUID(value);\n        //    } else {\n        //        throw 'cannot cast to primary key type';\n        //    }\n        //    break;\n        case String:\n            if (typeof value === 'string') {\n                newVal = value;\n            }\n            newVal = value.toString();\n            break;\n        case Number:\n            if (typeof value === 'number') {\n                newVal = value;\n            }\n            newVal = parseInt(value);\n            if (isNaN(newVal)) {\n                throw 'cannot cast to primary key type';\n            }\n            break;\n        default: newVal = value; break;\n    }\n    return newVal;\n}"],"sourceRoot":"/source/"}